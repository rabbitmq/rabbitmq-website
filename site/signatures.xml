<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!--
Copyright (c) 2007-2016 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License,
Version 2.0 (the "License”); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:x="http://www.rabbitmq.com/2011/extensions">
  <head>
    <title>Signatures</title>
  </head>
  <body>
      <p class="intro">
	This page describes the signing process we use when building
	RabbitMQ release packages, and how to verify the signatures on
	packages you download.
      </p>

      <doc:section name="signing-process">
	<p>
	  When we build package archive files, both binary and source,
	  we digitally sign them using <a
	  href="http://www.gnupg.org/">GnuPG</a> and <a
	  href="https://www.rabbitmq.com/rabbitmq-release-signing-key.asc">our public signing
	  key</a>.
    </p>
      </doc:section>

      <doc:section name="importing-gpg-key">
	<doc:heading>Importing the signing key</doc:heading>
	<p>
	  First, you need to import our <a
	  href="https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc">gpg key</a>. You can do that
	  using <a href="https://sks-keyservers.net/overview-of-pools.php">SKS Keyservers Pool</a>:
	</p>
	<pre class="sourcecode bash">gpg --keyserver hkps.pool.sks-keyservers.net --recv-keys 0x6B73A36E6026DFCA</pre>
	<p>
	  or you can download the key directly from <a href="https://bintray.com/rabbitmq">Bintray</a>:
	<pre class="sourcecode bash">wget https://dl.bintray.com/rabbitmq/Keys/rabbitmq-release-signing-key.asc
gpg --import rabbitmq-release-signing-key.asc</pre>
        </p>
	<p>
	  or download the key from rabbitmq.com:
	<pre class="sourcecode bash">wget https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
gpg --import rabbitmq-release-signing-key.asc</pre>
        </p>
        <p>
          For installation via <a href="/install-debian.html">Debian (apt) repositories</a>, use <code>apt-key</code>:
        </p>
        <pre class="sourcecode bash">apt-key adv --keyserver hkps.pool.sks-keyservers.net --recv-keys 0x6B73A36E6026DFCA</pre>
      </doc:section>

      <doc:section name="checking-signatures">
	<doc:heading>Checking signatures</doc:heading>
	<p>
	  Now you should be able to check signatures for our packages.
	  The appropriate command for checking a detached signature is
	</p>
	<pre class="sourcecode bash">gpg --verify <i>filename</i>.asc <i>filename</i></pre>
	<p>
	  Here's an example session, after having retrieved a RabbitMQ
	  source archive and its associated detached signature from
	  the download area:
	</p>
	<pre class="sourcecode bash">
gpg --verify rabbitmq-server_3.6.2-1_all.deb.asc rabbitmq-server_3.6.2-1_all.deb
gpg: Signature made Thu 12 May 2016 11:18:49 AM BST
gpg:                using RSA key 0xEDF4AE3B59B046FA
gpg: using subkey 0xEDF4AE3B59B046FA instead of primary key 0x6B73A36E6026DFCA
gpg: using PGP trust model
gpg: Good signature from "RabbitMQ Signing Key &lt;info@rabbitmq.com&gt;" [full]
Primary key fingerprint: 4E30 C634 2FB4 AF5C 6334  2330 79A1 D640 D80A 61F0
     Subkey fingerprint: 5EC4 26E8 A6F3 523D D924  8FC8 EDF4 AE3B 59B0 46FA
gpg: binary signature, digest algorithm SHA512
</pre>
        <p>
	  If the signature is invalid, you will see a "BAD signature"
	  message, and you should not use the package.
	</p>
	<p>
	  If the signature is valid, you should expect a "Good
	  signature" message; if you've not signed our key, you will
	  see a "Good signature" message along with a warning about
	  our key being untrusted.
        </p>
	<p>
	  If you trust our key, you can avoid the warning output by
	  GnuPG by signing it using your own key (to
	  create your private key run <code>gpg --gen-key</code>):
	</p>
	<pre>gpg --sign-key 0x6B73A36E6026DFCA</pre>
      </doc:section>
  </body>
</html>
