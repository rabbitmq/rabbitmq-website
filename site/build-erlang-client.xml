<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!--
Copyright (c) 2007-2019 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License, 
Version 2.0 (the "License”); you may not use this file except in compliance 
with the License. You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:xi="http://www.w3.org/2003/XInclude">
  <head>
        <title>Erlang AMQP Client Library Build Instructions</title>
  </head>
  <body>
      <p class="intro">
        This section describes the process for obtaining a copy of the
        RabbitMQ Erlang AMQP client source code and its dependecies, as
        well as instructions for building the Erlang client from source.
      </p>

      <doc:section name="obtaining">
        <doc:heading>Obtaining the source</doc:heading>

        <br />
        <ul>
          <li>
            Either download a released source code distribution from
            the <a href="erlang-client.html">download page</a>, or
          </li>

          <li>Check the code out directly from <a href="github.html">our GitHub repositories</a>:
          <pre class="lang-bash">
git clone https://github.com/rabbitmq/rabbitmq-erlang-client.git
cd rabbitmq-erlang-client
make
</pre>
          </li>
        </ul>

        <p>
          If you choose to check the code out using Git, the necessary
          dependencies will be fetched automatically. If you're working with a
          released source code distribution, though, all necessary dependencies
          are included.
        </p>
      </doc:section>

      <xi:include href="build-erlang-prerequisites.xml.inc"/>

      <doc:section name="building-erlang-client">
        <doc:heading>Building the Erlang client libraries</doc:heading>

        <p>
          If you ran the commands above, there is nothing else to do.
          The Erlang.mk build system compiled everything when you ran
          <code>make</code>.
        </p>

        <p>
          Other interesting <code>Makefile</code> targets include
        </p>

        <p>
          <dl>
            <dt>all</dt>
            <dd>
              The default target. Builds the client libraries.
            </dd>

            <dt>shell</dt>
            <dd>
              Builds the client libraries and starts an Erlang shell with the
              libraries loaded.
            </dd>

            <dt>run-broker</dt>
            <dd>
              Builds the client and starts RabbitMQ server with shell
              and the client included in load path.
            </dd>

            <dt>clean</dt>
            <dd>
              Removes temporary build products.
            </dd>

            <dt>distclean</dt>
            <dd>
              Removes all build products.
            </dd>

            <dt>tests</dt>
            <dd>
              Runs a set of tests against a server running on
              locally.
            </dd>

            <dt>all_tests</dt>
            <dd>
              Clean compiles the client and client tests source code
              and runs <code>network_client_SUITE</code>,
              <code>direct_client_SUITE</code> and packaging
              tests. During testing, this make target runs an instance
              of the broker, so make sure there is no other instance
              of RabbitMQ server running.
            </dd>

            <dt>dialyze</dt>
            <dd>
              Analyses the client source code with dialyzer. Uses PLT
              file from default location:
              <code>~/.dialyzer_plt</code>. Use

              <pre class="lang-bash">
make PLT=/path/to/plt dialyze</pre>

              to override this. Add broker to PLT beforehand,
              otherwise you will a lot of 'unknown function'
              warnings. See <code>add_broker_to_plt</code> make
              target.
            </dd>

            <dt>source-dist</dt>
            <dd>
              Creates tarball of all the client source code.
            </dd>

            <dt>package</dt>
            <dd>
              Creates an erlang archive of the client.
            </dd>

          </dl>
        </p>
      </doc:section>
  </body>
</html>
