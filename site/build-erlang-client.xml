<?xml-stylesheet type="text/xml" href="page.xsl"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc">
  <head>
  	<title>RabbitMQ - Erlang AMQP Client Library Build Instructions</title>
  </head>
  <body>
    <doc:div>
      <p class="intro">
	This section describes the process for obtaining a copy of the
	RabbitMQ Erlang AMQP client source code and its dependecies, as
	well as instructions for building the Erlang client from source.
      </p>

      <doc:toc class="compact">
	<doc:heading>Table of Contents</doc:heading>
      </doc:toc>

      <doc:section name="obtaining">
	<doc:heading>Obtaining the source</doc:heading>

	<br />
	<ul>
	  <li>
	    Either download a released source code distribution from
	    the <a href="erlang-client.html">download page</a>, or
	  </li>

	  <li>Check the code out directly from <a href="mercurial.html">our mercurial repositories</a>:
	    <pre class="sourcecode">$ hg clone http://hg.rabbitmq.com/rabbitmq-codegen
$ hg clone http://hg.rabbitmq.com/rabbitmq-server
$ hg clone http://hg.rabbitmq.com/rabbitmq-erlang-client
$ cd rabbitmq-erlang-client
$ make</pre>
	  </li>
	</ul>

	<p>
	  If you choose to check the code out using mercurial, be
	  aware that the server code and the code-generation module are
	  dependencies of the Erlang client library. If you're  working with a
	  released source code distribution, though, all necessary dependecies
	  are included.
	</p>
      </doc:section>

      <doc:section name="prerequisites">
	<doc:heading>Required Libraries and Tools</doc:heading>

	<p>
	  In order to build RabbitMQ Erlang AMQP client library, you will need a few tools.
	</p>

	<p>
	  The Erlang client libraries require a recent version of <a
	  href="http://www.python.org/download/">Python</a>  and
	  <a href="http://pypi.python.org/pypi/simplejson">simplejson.py</a>
	  (an implementation of a <a href="http://json.org">JSON</a>
	  reader and writer in Python), for generating AMQP framing code.
          simplejson.py is included as a standard json library in the Python
          core since 2.6 release. 
	</p>

	<p>
	  Additionally, for building the Erlang client libraries, you will need
	</p>

	<ul class="compact">
	  <li>
	    the <a href="http://www.erlang.org/download.html">Erlang</a>
	    development and runtime tools<br/> If you are on a
	    Debian-based system then you need the following packages
	    installed as a
	    minimum: <i>erlang-dev</i>, <i>erlang-base</i>
	    or <i>erlang-base-hipe</i>, <i>erlang-ssl</i>,
	    <i>erlang-os-mon</i>, <i>erlang-mnesia</i> (on some older
	    distributions the last three are bundled
	    into <i>erlang-nox</i>).  If you are building and
	    installing Erlang from source then you must ensure that
	    openssl is installed on your system.
	  </li>

	  <li>
	    a recent version of <a href="http://www.gnu.org/software/make/">GNU make</a>
	  </li>
	</ul>

      </doc:section>

	<doc:section name="building-erlang-client">
	  <doc:heading>Building the Erlang client libraries</doc:heading>

	  <p>
	    Change to the <code>rabbitmq-erlang-client</code> directory, and
	    type <code>make</code>.
	  </p>

	  <p>
	    Other interesting <code>Makefile</code> targets include
	  </p>

	  <p>
	    <dl>
	      <dt>all</dt>
	      <dd>
		The default target. Builds the client libraries.
	      </dd>

	      <dt>run</dt>
	      <dd>
		Builds the client libraries and starts an Erlang shell with the
		libraries loaded.
	      </dd>

	      <dt>clean</dt>
	      <dd>
		Removes build products.
	      </dd>
	      
	      <dt>test</dt>
	      <dd>
		Runs a set of tests against a server running on locally. You will need
		to start a local instance of an AMQP server, running on port 5672,
		which allows guest/guest access on virtual host "/", beforehand.
	      </dd>
	    </dl>
	  </p>
      </doc:section>
    </doc:div>
  </body>
</html>
