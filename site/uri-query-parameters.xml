<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!DOCTYPE html [
<!ENTITY % entities SYSTEM "rabbit.ent" >
%entities;
]>
<!--
Copyright (c) 2007-2019 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License, 
Version 2.0 (the "License”); you may not use this file except in compliance 
with the License. You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:x="http://www.rabbitmq.com/2011/extensions">
  <head>
    <title>URI query parameters</title>
  </head>
  <body>
    <p class="intro">
      This page is a less-formal companion to the <a
      href="uri-spec.html">URI specification</a>, documenting how the
      officially-supported clients interpret URI parameters. Currently
      only the Erlang client does so.
    </p>

    <p>
      The <a href="federation-reference.html#upstreams">federation</a>
      and <a href="shovel.html#uris">shovel</a> plugins specify
      connections to other brokers using URIs, and are implemented
      using the Erlang client, so they take all the parameters
      described here for it.
    </p>

    <p>
      Query parameters are added to the URI in the usual way. Any
      parameter can be omitted. The client will pick sensible defaults
      when they are.
    </p>

    <p>
      Example (non-encrypted):
    </p>

    <pre>amqp://myhost?heartbeat=10&amp;connection_timeout=10000</pre>

    <p>
      This specifies a (non-encrypted) network connection to the host
      <code>myhost</code>. The heartbeat interval is set to 5 seconds,
      and connection timeout is set to 10 seconds (10,000 milliseconds).
      Other parameters are set to their default values.
    </p>

    <p>
      Example (encrypted):
    </p>

    <pre>amqps://myhost?cacertfile=/certs/cacert.pem
      &amp;certfile=/certs/cert.pem
      &amp;keyfile=/certs/key.pem
      &amp;verify=verify_peer
      &amp;server_name_indication=myhost
    </pre>

    <p>
      This specifies an encrypted network connection to the host
      <code>myhost</code>. Absolute paths to the certificate files
      are provided. <code>verify_peer</code> ensures that certificate
      chain of trust is verified, and <code>server_name_indication</code>
      validates the <code>CN</code> value in the server's certificate
      against the hostname <code>myhost</code>.
    </p>

    <!--
         TODO when another client supports some of these, split them
         out into standardised and client-specific. For example,
         auth_mechanism and heartbeat seem fairly standard, but the
         SSL bits are quite tied to the Erlang SSL implementation.
    -->

    <table>
      <tr>
        <th>Parameter name</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>
          <code>cacertfile</code><br/>
          <code>certfile</code><br/>
          <code>keyfile</code>
        </td>
        <td>
          Paths to files to use in order to present a client-side SSL
          certificate to the server. Only of use for the
          <code>amqps</code> scheme.
        </td>
      </tr>
      <tr>
        <td>
          <code>verify</code><br/>
          <code>server_name_indication</code>
        </td>
        <td>
          Only of use for the <code>amqps</code> scheme and used to
          configure verification of the server's x509 (TLS)
          certificate. <b>Note:</b> It is highly recommended to use
          both values. See the <a href="ssl.html">TLS guide</a> for
          details of SSL in RabbitMQ in general and specifically the
          <a href="ssl.html#configure-erlang">Erlang client</a>
          section.
        </td>
      </tr>
      <tr>
        <td><code>auth_mechanism</code></td>
        <td>
          SASL authentication mechanisms to consider when negotiating
          a mechanism with the server. This parameter can be specified
          multiple times,
          e.g. <code>?auth_mechanism=plain&amp;auth_mechanism=amqplain</code>,
          to specify multiple mechanisms.
        </td>
      </tr>
      <tr>
        <td><code>heartbeat</code></td>
        <td>
          <a href="/heartbeats.html">Heartbeat</a> timeout value in seconds (an integer)
          to negotiate with the server.
        </td>
      </tr>
      <tr>
        <td><code>connection_timeout</code></td>
        <td>
          Time in milliseconds (an integer) to wait while establishing a TCP connection
          to the server before giving up.
        </td>
      </tr>
      <tr>
        <td><code>channel_max</code></td>
        <td>
          Maximum number of channels to permit on this connection.
        </td>
      </tr>
    </table>

    <p>
      <a href="/ssl.html">TLS options</a> can also be specified globally using the
      <code>amqp_client.ssl_options</code> configuration key. They will be merged with
      the TLS parameters from the URI (the latter will take
      precedence) and affect all outgoing RabbitMQ Erlang client connections
      on the node, including plugins that use the client internally (Federation, Shovel, etc).
      Please see the <a href="/ssl.html">TLS guide</a> for details.
    </p>
  </body>
</html>
