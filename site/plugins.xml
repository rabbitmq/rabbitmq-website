<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!DOCTYPE html PUBLIC "bug in xslt processor requires fake doctype"
"otherwise css isn't included" [
<!ENTITY % entities SYSTEM "rabbit.ent" >
%entities;
]>
<html xmlns:r="http://www.rabbitmq.com/namespaces/ad-hoc/conformance">
  <head>
    <title>RabbitMQ - Plugins</title>
  </head>
  <body>
    <h2 id="plugins">Plugins</h2>

    <p>
      Currently, all plugins below are <em>experimental</em>. This
      means we make no claims about their fitness for purpose or
      stability, though they are in general under active
      development. In particular, the version numbers of the packages
      do not guarantee compatibility with versions of the RabbitMQ
      server<sup><a href="#compatibility">[1]</a></sup>.
    </p>

    <p>
      RabbitMQ supports a variety of plugins. This page contains links
      to some of our plugins, packaged as .ez files. The simplest way
      to install plugins is to download all the required .ez files
      from this page, drop them in your plugins directory
      and restart RabbitMQ.

      The plugins directory location is determined by the
      <b>RABBITMQ_PLUGINS_DIR</b> environment variable whose default
      value depends on how you installed RabbitMQ. Some common values
      are:

      <table>
        <tr><th>Installation method</th><th>Plugins directory</th></tr>
        <tr>
          <th>Deb / RPM packages</th>
          <td>
            <code>/usr/lib/rabbitmq/lib/rabbitmq_server-<i>version</i>/plugins</code>
          </td>
        </tr>
        <tr>
          <th>Windows</th>
          <td>
            Typically <code>C:\Program
            Files\RabbitMQ\rabbitmq_server-<i>version</i>\plugins</code>
            (depending on where it was installed)
          </td>
        </tr>
        <tr>
          <th>Macports</th>
          <td>
            <code>/opt/local/lib/rabbitmq/lib/rabbitmq_server-<i>version</i>/plugins</code>
          </td>
        </tr>
        <tr>
          <th>Generic Unix</th>
          <td>
            <code>rabbitmq_server-<i>version</i>/plugins</code>
            (depending on where it was installed)
          </td>
        </tr>
      </table>
    </p>

    <h3 id="rabbitmq-jsonrpc-channel">rabbitmq-jsonrpc-channel</h3>

    <p>
      An AMQP-over-HTTP protocol binding for RabbitMQ and some
      Javascript libraries for interacting with RabbitMQ over HTTP, as
      well as some examples.
    </p>

    <p>To use this plugin the following files are required:</p>
    <ul>
      <li><a href="/releases/plugins/v&version-server;/mochiweb-&version-server;.ez">mochiweb</a></li>
      <li><a href="/releases/plugins/v&version-server;/rfc4627_jsonrpc-&version-server;.ez">rfc4627_jsonrpc</a></li>
      <li><a href="/releases/plugins/v&version-server;/rabbitmq-mochiweb-&version-server;.ez">rabbitmq-mochiweb</a></li>
      <li><a href="/releases/plugins/v&version-server;/rabbitmq-jsonrpc-&version-server;.ez">rabbitmq-jsonrpc</a></li>
      <li><a href="/releases/plugins/v&version-server;/rabbitmq-jsonrpc-channel-&version-server;.ez">rabbitmq-jsonrpc-channel</a></li>
    </ul>

    <h3 id="rabbitmq-management">rabbitmq-management</h3>

    <p>
      A management / monitoring API over HTTP, along with a browser-based
      UI. For more information, see <a href="management.html">the
      page on the management plugin</a>.
    </p>

    <p>To use this plugin the following files are required:</p>
    <ul>
      <li><a href="/releases/plugins/v&version-server;/mochiweb-&version-server;.ez">mochiweb</a></li>
      <li><a href="/releases/plugins/v&version-server;/webmachine-&version-server;.ez">webmachine</a></li>
      <li><a href="/releases/plugins/v&version-server;/amqp_client-&version-server;.ez">amqp_client</a></li>
      <li><a href="/releases/plugins/v&version-server;/rabbitmq-mochiweb-&version-server;.ez">rabbitmq-mochiweb</a></li>
      <li><a href="/releases/plugins/v&version-server;/rabbitmq-management-&version-server;.ez">rabbitmq-management</a></li>
    </ul>

    <h3 id="rabbitmq-shovel">rabbitmq-shovel</h3>

    <p>
      A plug-in for RabbitMQ that shovels messages from a queue on one
      broker to an exchange on another broker. Please see
      the <a href="http://hg.rabbitmq.com/rabbitmq-shovel/file/&version-server-hg;/README">readme</a> for more information.
    </p>

    <p>To use this plugin the following files are required:</p>
    <ul>
      <li><a href="/releases/plugins/v&version-server;/amqp_client-&version-server;.ez">amqp_client</a></li>
      <li><a href="/releases/plugins/v&version-server;/rabbitmq-shovel-&version-server;.ez">rabbitmq-shovel</a></li>
    </ul>

    <h3 id="rabbitmq-stomp">rabbitmq-stomp</h3>

    <p>
      A gateway for exposing AMQP functionality via the <a
      href="http://stomp.codehaus.org/Protocol">STOMP protocol</a>, as
      implemented by many <a
      href="http://stomp.codehaus.org/Clients">clients</a> for various
      programming languages, and a few other <a
      href="http://stomp.codehaus.org/Brokers">servers</a> besides
      RabbitMQ.
    </p>

    <p>
      Please see
      the <a href="http://hg.rabbitmq.com/rabbitmq-stomp/file/&version-server-hg;/README">readme</a>
      file and our
      various <a href="http://www.lshift.net/blog/index.php?s=stomp">blog
      articles</a> about the adapter for more information on compiling
      and configuring it.
    </p>

    <p>To use this plugin the following files are required:</p>
    <ul>
      <li><a href="/releases/plugins/v&version-server;/amqp_client-&version-server;.ez">amqp_client</a></li>
      <li><a href="/releases/plugins/v&version-server;/rabbit_stomp-&version-server;.ez">rabbit_stomp</a></li>
    </ul>

    <h3 id="rabbitmq-xmpp">rabbitmq-xmpp</h3>

    <p>
      A gateway for exposing RabbitMQ's AMQP services to the global
      XMPP network, by integrating RabbitMQ with <a
      href="http://www.process-one.net/en/ejabberd/">ejabberd</a>.
    </p>

    <p>
      By bridging between the two systems, we benefit from the
      combination of XMPP's internet-scale addressing and federation,
      XMPP's presence model, AMQP's store-and-forward capability and
      AMQP's routing and filtering.
    </p>

    <p>
      Note that we do not supply this plugin in binary form, as it is
      a plugin for ejabberd rather than rabbitmq-server. Please
      see <a href="http://hg.rabbitmq.com/rabbitmq-xmpp/raw-file/default/doc/index.html">the
      documentation</a> for more information on building and
      configuring the gateway.
    </p>

    <h3 id="rabbitmq-bql">rabbitmq-bql</h3>

    <p>
      The Broker Query Language plugin provides a textual, SQL-like
      query language for interrogating and configuring the broker.
    </p>

    <p>
      The BQL plugin needs to be built from source. See
      <a href="rabbitmq-bql.html#installation">the installation
      instructions.</a>
    </p>

    <h3 id="rabbitmq-erlang-client">rabbitmq-erlang-client</h3>

    <p>
      An Erlang client for RabbitMQ. This client offers both a
      networked version that uses standard TCP-based AMQP framing and
      a direct client that uses native Erlang message passing to a
      RabbitMQ broker. See the <a href="erlang-client-user-guide.html">user
      guide</a> and the <a href="http://hg.rabbitmq.com/rabbitmq-erlang-client/file/&version-server-hg;/README">README</a>
      for more information.
    </p>

    <p>This plugin is a dependency of some others, but can also be
    used standalone (not embedded in the server). Such use is outside
    the scope of this page.</p>

    <h2>Plugin source repositories</h2>
    <p>You can also build plugins from source. The following table
    lists the repositories of our plugins and their dependencies.</p>

    <repositories xmlns="http://www.rabbitmq.com/namespaces/ad-hoc/conformance" type="plugin">
      <repository type="hg" shortname="rabbitmq-jsonrpc-channel"
                  url="http://hg.rabbitmq.com/rabbitmq-jsonrpc-channel/"/>
      <repository type="hg" shortname="rabbitmq-shovel"
		  url="http://hg.rabbitmq.com/rabbitmq-shovel/"/>
      <repository type="hg" shortname="rabbitmq-stomp"
		  url="http://hg.rabbitmq.com/rabbitmq-stomp/"/>
      <repository type="hg" shortname="rabbitmq-xmpp"
		  url="http://hg.rabbitmq.com/rabbitmq-xmpp/"/>
      <repository type="hg" shortname="rabbitmq-erlang-client"
		  url="http://hg.rabbitmq.com/rabbitmq-erlang-client/"/>
      <repository type="github" shortname="erlang-rfc4627"
                  url="http://github.com/tonyg/erlang-rfc4627"/>
      <repository type="hg" shortname="rabbitmq-jsonrpc"
                  url="http://hg.rabbitmq.com/rabbitmq-jsonrpc/"/>
      <repository type="hg" shortname="rabbitmq-mochiweb"
                  url="http://hg.rabbitmq.com/rabbitmq-mochiweb/"/>
    </repositories>

    <p/>
    <h2>Compatibility</h2>
    <p><a name="compatibility"/>
      We compile the plugins when we make a release of the server, so
      in general, each plugin has been compiled against the latest
      release of the server code (and the plugin's dependencies). We
      may also from time to time post "known good" binaries; these
      will be marked with a particular server version with which they
      are known to work.
    </p>
    <p>
      Since the default location of the plugins directory is
      version-specific, installing / upgrading to a new version of the
      server disables all plugins. That is the safest option since
      often plugins depend on specific versions of the
      server. Alternatively, plugins can be retained across upgrades
      by setting <b>RABBITMQ_PLUGINS_DIR</b> to a location shared by
      all installed rabbitmq server versions.
    </p>
  </body>
</html>
