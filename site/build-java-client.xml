<?xml-stylesheet type="text/xml" href="page.xsl"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc">
  <head>
  	<title>RabbitMQ - Java AMQP Client Library Build Instructions</title>
  </head>
  <body>
      <p class="intro">
	This section describes the process for obtaining a copy of the
	RabbitMQ Java AMQP client source code, as well as instructions for building the
	Java client from source.
      </p>

      <doc:section name="obtaining">
	<doc:heading>Obtaining the source</doc:heading>

	<br />
	<ul>
	  <li>
	    Either download a released source code distribution from
	    the <a href="java-client.html">download page</a>, or
	  </li>

	  <li>Check the code out directly from <a href="mercurial.html">our mercurial repositories</a>:
	    <pre class="sourcecode">$ hg clone http://hg.rabbitmq.com/rabbitmq-codegen
$ hg clone http://hg.rabbitmq.com/rabbitmq-java-client
$ cd rabbitmq-java-client
$ ant dist</pre>
	  </li>
	</ul>

	<p>
	  If you choose to check the code out using mercurial, be
	  aware that the code-generation module is a dependency of
	  the Java client library. If you're  working with a released
	  source code distribution, though, the code-generation module is included.
	</p>
      </doc:section>

      <doc:section name="prerequisites">
	<doc:heading>Required Libraries and Tools</doc:heading>

	<p>
	  In order to build RabbitMQ Java AMQP client library, you will need a few tools.
	</p>

	<p>
	  The Java client libraries requires a recent version of <a
	  href="http://www.python.org/download/">Python</a>  and
	  <a href="http://pypi.python.org/pypi/simplejson">simplejson.py</a>
	  (an implementation of a <a href="http://json.org">JSON</a>
	  reader and writer in Python), for generating AMQP framing code.
          simplejson.py is included as a standard json library in the Python
          core since 2.6 release. 
	</p>

	<p>
	  Additionally, for building the Java client libraries, you will need
	</p>

	<ul class="compact">
	  <li>
	    a <a
	    href="http://java.sun.com/javase/downloads/index.jsp">Java
	    compiler</a>, for Java language version 1.5 or newer
	  </li>

	  <li>
	    <a href="http://ant.apache.org/">Ant</a>, version 1.6 or
	    newer, including the optional <code>ant-trax.jar</code>
	    (if you download ant from the above then this is included;
	    if you are using the <code>ant</code> Debian/Ubuntu package then
	    you also need to install the <code>ant-optional</code>
	    package).
	  </li>
	</ul>

      </doc:section>

	<doc:section name="building-java-client">
	  <doc:heading>Building the Java client libraries</doc:heading>

	  <p>
	    Ensure <code>JAVA_HOME</code> is correctly set. Change to
	    the <code>rabbitmq-java-client</code> directory and type
	    <code>ant</code>.
	  </p>

	  <p>
	    Other interesting <code>build.xml</code> targets include
	  </p>

	  <p>
	    <dl>
	      <dt>build</dt>
	      <dd>
		    The default target. Builds the client library classes
		    into <code>build/classes</code>.
	      </dd>

	      <dt>clean</dt>
	      <dd>
	        Removes the entire <code>build</code> directory,
	        including compiled classes, built jar files, and any
	        distributions placed under <code>build/dist</code>.
	      </dd>

	      <dt>jar</dt>
	      <dd>
	        Builds a jar file from the client library classes into
	        <code>build/lib</code>.
	      </dd>

	      <dt>dist</dt>
	      <dd>
	        Constructs a directory, by default <code>build/dist</code>,
	        containing the RabbitMQ Java AMQP client jar files as well
	        as all the libraries the AMQP client depends on from
	        <code>lib</code>. The distribution output directory can be
	        overridden by setting the Ant property <code>dist.out</code>
	        to a new location:
	        <p>
	          <code>ant -Ddist.out=/some/place/to/put/a/distribution dist</code>
	        </p>
	      </dd>
	    </dl>
	  </p>
      </doc:section>
  </body>
</html>
