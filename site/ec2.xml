<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!DOCTYPE html [
<!ENTITY % entities SYSTEM "rabbit.ent" >
%entities;
]>
<!--
Copyright (c) 2007-2019 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License,
Version 2.0 (the "License”); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:x="http://www.rabbitmq.com/2011/extensions"
      xmlns:xi="http://www.w3.org/2003/XInclude">
  <head>
    <title>Amazon EC2</title>
  </head>
  <body>
<doc:section>

  <p>
    This guide assumes familiarity with the general <a href="/clustering.html">clustering guide</a> as well
    the guide on <a href="/cluster-formation.html">cluster peer discovery</a>.
  </p>

  <doc:subsection name="overview">
    <doc:heading>Overview</doc:heading>
    <p>
      Using RabbitMQ on EC2 is quite similar running it on other
      platforms. However, the are certain minor aspects to EC2 that need
      to be accounted for. They primarily have to do with hostnames and their resolution.
    </p>

    <p>
      This guide uses manual (<a href="/cli.html">CLI</a>-driven) RabbitMQ clustering. Other options
      exist that are more suitable for automation:

      <ul>
        <li>
          <a href="/cluster-formation.html">peer discovery plugin for AWS</a> (RabbitMQ 3.7.0 or later)
        </li>
        <li>
          <a href="https://github.com/rabbitmq/rabbitmq-autocluster">rabbitmq-autocluster</a> (for 3.6.x).
        </li>
      </ul>

      <a href="https://github.com/rabbitmq/chef-cookbook">RabbitMQ Chef cookbook</a> and <a href="https://github.com/puppetlabs/puppetlabs-rabbitmq">RabbitMQ Puppet module</a> can help with automating cluster provisioning.
    </p>
  </doc:subsection>

  <doc:subsection name="machine_images">
    <doc:heading>AMIs</doc:heading>
    <p>
      Pivotal currently does not provide AMI images with RabbitMQ pre-provisioned.
      RabbitMQ works well on up-to-date Ubuntu, Debian and CentOS AMIs as long as
      a <a href="/which-erlang.html">compatible version of Erlang/OTP</a> is installed.
    </p>
  </doc:subsection>

  <doc:subsection name="instance_type">
    <doc:heading>Choose Instance Type</doc:heading>
    <p>
      First, you need to choose what instance type to run. RabbitMQ
      will work on every instance type, but there are a few considerations
      worth bearing in mind:
    </p>
    <ul>
      <li>
	Use 64-bit instances.
      </li>
      <li>
	Depending on the workload and settings, RabbitMQ can require substantial amounts of memory.
	Make sure that your host does have <a href="/memory.html">enough RAM</a> and always have
	at least a few gigabytes of swap space enabled. Workloads can be simulated using <a href="/java-tools.html">PerfTest</a>.
        A separate guide about <a href="/memory-use.html">reasoning about node memory usage</a> is available.
      </li>
      <li>
	RabbitMQ can take advantage of all the CPU cores
	in the system provided the workload uses <a href="/queues.html">multiple queues</a>.
        Other factors should be taken into account (e.g. disk and network I/O throughput).
      </li>
      <li>
        <a href="/monitoring.html">Monitoring</a> RabbitMQ nodes as well as applications that use it
        on real or simulated workloads will help assess how suitable a particular instance type is.
      </li>
    </ul>
  </doc:subsection>


  <doc:subsection name="os_type">
    <doc:heading>Choose Operating System</doc:heading>
    <p>
      Although RabbitMQ is tested with most major Linux distributions,
      Ubuntu support for Amazon EC2 seems to be strongest, so that's the distribution this guide
      will use.

      See <a href="http://uec-images.ubuntu.com/releases/">Ubuntu Cloud Images</a>
      and <a href="https://help.ubuntu.com/community/EC2StartersGuide">Ubuntu EC2 Starters Guide</a>.
    </p>
  </doc:subsection>


  <doc:subsection name="install">
    <doc:heading>Install RabbitMQ</doc:heading>
    <p>
      Please consult the installation guides for

      <ul>
        <li><a href="install-debian.html">Debian and Ubuntu</a></li>
        <li><a href="install-rpm.html">RHEL, CentOS and Fedora</a></li>
      </ul>
    </p>

    <p>
      A wide variety of deployment tools can be used to automate
      RabbitMQ deployment.

      <ul>
        <li><a href="https://github.com/rabbitmq/chef-cookbook">Chef cookbook</a></li>
        <li><a href="https://github.com/puppetlabs/puppetlabs-rabbitmq">Puppet module</a></li>
        <li><a href="https://registry.hub.docker.com/_/rabbitmq/">Docker image</a> (<a href="https://github.com/docker-library/rabbitmq/">on GitHub</a>)</li>
      </ul>

      are some popular options.
    </p>
  </doc:subsection>

  <doc:subsection name="ebs">
    <doc:heading>Persistent Data on EBS Devices</doc:heading>
    <p>
      RabbitMQ writes data to the following directories on Ubuntu:
      <ul>
	<li>
	  <code>/var/lib/rabbitmq/</code> to store persistent data
	  like the messages or queues
	</li>

	<li>
	  <code>/var/log/rabbitmq/</code> to store logs
	</li>
      </ul>

      See the <a href="/relocate.html">File and Directory Locations</a> for details.
    </p>

    <p>
      If you choose to use EBS block device to store RabbitMQ node data directory, just
      link these directories to your EBS device. Stop RabbitMQ
      before making any changes to the data directory:
      <pre class="lang-bash">sudo service rabbitmq-server stop</pre>
    </p>
    <p>
      Note that EBS volumes have an <a
      href="http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html">IOPS
      limits</a>, which can impact thoughput and RabbitMQ message
      store operations. If an EBS volume hits the limit, disk writes
      will worsen. It is also possible that the RabbitMQ message store
      compaction (garbage collection of on-disk data) can fall behind
      disk writes, which means the disk will be filled up quicker than
      disk space can be reclaimed after messages were consumed and
      acknowledged. This will eventually lead to <a href="/alarms.html">resource
      alarms</a> and publisher throttling. Please make sure the limit
      is high enough and set up I/O operation rate monitoring.
    </p>
  </doc:subsection>
</doc:section>

<xi:include href="install-guest-localhost.xml.inc"/>
<xi:include href="clustering-hostname-issues.xml.inc"/>
<xi:include href="clustering-firewalled-nodes.xml.inc"/>
<xi:include href="clustering-erlang-version.xml.inc"/>

  <p>
    If you have any comments please <a href="contact.html">let us know</a>.
  </p>
  </body>
</html>
