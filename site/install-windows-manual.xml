<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!--
Copyright (c) 2007-2019 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License,
Version 2.0 (the "License”); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!DOCTYPE html [
          <!ENTITY % entities SYSTEM "rabbit.ent" >
          %entities;
          ]>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:r="http://www.rabbitmq.com/namespaces/ad-hoc/conformance"
      xmlns:x="http://www.rabbitmq.com/2011/extensions"
      xmlns:xi="http://www.w3.org/2003/XInclude">
  <head>
    <title>Installing on Windows (manual)</title>
  </head>

  <body show-in-this-page="true">
    <doc:section name="intro">
      <p>
        This guide describes how RabbitMQ can be installed and configured manually on Windows. In general
        we recommend using the <a href="/install-windows.html">provided Windows installer</a> when possible.
      </p>
    </doc:section>

    <doc:section name="download-windows-binary-build">
      <doc:heading>Download the Server</doc:heading>
      <r:downloads>
        <r:download absolute="yes" url="https://github.com/rabbitmq/rabbitmq-server/releases/download/&version-server-tag;/rabbitmq-server-windows-&version-server;.zip"
                    downloadfile="rabbitmq-server-windows-&version-server;.zip">
	                  Binary build for Windows systems (from <a href="https://github.com/rabbitmq/rabbitmq-server/releases">GitHub</a>)
        </r:download>
      </r:downloads>
    </doc:section>


    <doc:section name="install-erlang">
      <doc:heading>Install Erlang/OTP</doc:heading>

      <p>
        First you need to install a <a href="/which-erlang.html">supported version of Erlang</a> for Windows.
        Run the <a href="http://www.erlang.org/download.html">Erlang Windows installer</a>.
        Erlang will appear in the Start Menu,
        and <code>\erl<var>x.x.x</var>\bin\erl.exe</code> will be in
        <code>&dir-win32-apps;</code> or <code>&dir-win-apps;</code>, depending on
        your platform and whether you chose a 32bit or 64bit version of Erlang.
      </p>

      <doc:subsection name="set-erlang-home-variable">
        <doc:heading>Set ERLANG_HOME</doc:heading>
        <p>
            If you have an existing RabbitMQ installation with the broker running as a service and
            you installed an Erlang VM with a different architecture then you must uninstall the
            service before updating <span class="envvar">ERLANG_HOME</span>.
        </p>
        <p>
            Set <span class="envvar">ERLANG_HOME</span> to where you actually put your Erlang installation, e.g.
            <code>C:\Program Files\erl<var>x.x.x</var></code> (full path).
            The RabbitMQ batch files expect to execute
            <code><span class="envvar">%ERLANG_HOME%</span>\bin\erl.exe</code>.
        </p>
        <p>
            Go to Start&#xA0;>&#xA0;Settings&#xA0;>&#xA0;Control&#xA0;Panel&#xA0;>&#xA0;System&#xA0;>&#xA0;Advanced&#xA0;>&#xA0;Environment&#xA0;Variables.
            Create the system environment variable <span class="envvar">ERLANG_HOME</span>
            and set it to the full path of the directory which contains
            <code>bin\erl.exe</code>.
        </p>
      </doc:subsection>
    </doc:section>


    <doc:section name="install-rabbitmq">
      <doc:heading>Install RabbitMQ Server</doc:heading>

      <p>
        Download <code>rabbitmq-server-windows-&version-server;.zip</code>
        from the link above.
      </p>
      <p>
        From the zip file, extract the folder named
        <code>rabbitmq_server-&version-server;</code>
        into <code>&dir-server-windows;</code>
        (or somewhere suitable for application files).
      </p>
    </doc:section>


    <doc:section name="erlang-cookie">
      <doc:heading>Synchronise Erlang Cookie</doc:heading>
        <p>
          The Erlang cookie is a shared secret used for authentication between <a href="/clustering.html">RabbitMQ nodes</a> and <a href="/cli.html">CLI tools</a>.
          The value is stored in a file commonly referred to as the Erlang cookie file.
        </p>

        <p>
          The cookie file used by the service account and the user
          running <code>rabbitmqctl.bat</code> must be synchronised for
          CLI tools such as <code>rabbitmqctl.bat</code> to function. All nodes in a cluster must have the same
          cookie value (cookie file contents).
        </p>

        <p>
          Please see <a href="/cli.html#erlang-cookie">How CLI Tools Authenticate to Nodes (and Nodes to Each Other): the Erlang Cookie</a> for details.
        </p>
    </doc:section>


    <doc:section name="locating-binaries-and-data">
      <doc:heading>Locating CLI Tools and App Data</doc:heading>

      <doc:subsection name="locating-binaries">
        <doc:heading>CLI tools</doc:heading>

          <p>
            Within the <code>rabbitmq_server-&version-server;\sbin</code>
            directory are some scripts which run commands to control the RabbitMQ server.
          </p>
          <p>
            The RabbitMQ server can be run as either an application or service (not both).
          </p>
          <ul>
            <li><a href="man/rabbitmq-server.1.html">rabbitmq-server.bat</a>
              starts the broker as an application.</li>
            <li><a href="man/rabbitmq-service.html">rabbitmq-service.bat</a>
              manages the service and starts the broker.</li>
            <li><a href="man/rabbitmqctl.8.html">rabbitmqctl.bat</a>
              manages a running broker.</li>
          </ul>
          <p>
            Log in as an administrator. To see the output,
            run these from a
            <a href="http://windows.microsoft.com/en-GB/windows7/Command-Prompt-frequently-asked-questions">Command Prompt</a>
            in the <code>sbin</code> directory.
          </p>
          <p>
            <em>Note: </em>On Windows Vista (and later) it is necessary to
            <a href="http://windows.microsoft.com/en-GB/windows7/Command-Prompt-frequently-asked-questions">elevate privilege</a>
            (e.g. right-click on the icon to select Run as Administrator).
          </p>

          <p>
            Set up the system path so RabbitMQ server and CLI tools from the <code>sbin</code> directory
            can be executed without using fully qualified paths.
            <ul>
              <li>
                Create a system environment variable (e.g. <code>RABBITMQ_SERVER</code>) for
                <code>"&dir-server-windows;\rabbitmq_server-&version-server;"</code>.
                Adjust this if you put <code>rabbitmq_server-&version-server;</code> elsewhere,
                or if you upgrade versions.
              </li>
              <li>
                Append the literal string "<code>;%RABBITMQ_SERVER%\sbin</code>"
                to your system path (aka %PATH%).
              </li>
            </ul>

            Now it should be possible to run rabbitmq commands from any (administrator) Command Prompt.
          </p>

          <p>
            Navigate to <code>rabbitmq_server-&version-server;\sbin</code>
            to run commands if the system path does not contain the RabbitMQ <code>sbin</code>
            directory.
          </p>
      </doc:subsection>


      <doc:subsection name="locating-data-directory">
        <doc:heading>Data Directory</doc:heading>

          <p>
            By default, the RabbitMQ logs and node's data directory
            are stored in the current user's Application Data directory
            e.g. <code>C:\Documents and Settings\<span class="envvar">%USERNAME%</span>\Application Data</code> or
            <code>C:\Users\<span class="envvar">%USERNAME%</span>\AppData\Roaming</code>.
          </p>
          <p>
            Execute <code>echo %APPDATA%</code> at a Command Prompt
            to find this directory. Alternatively,
            Start&#xA0;>&#xA0;Run&#xA0;<code>%APPDATA%</code>
            will open this folder.
          </p>
          <p>
            A node can be <a href="/configure.html">configured</a> to use a <a href="/relocate.html">different data directory</a>
            using an environment variable, <code></code>.
          </p>
      </doc:subsection>
    </doc:section>


    <doc:section name="running-windows">
      <doc:heading>Running RabbitMQ Server as an Application</doc:heading>
      <p>
        The application is started by the <code>rabbitmq-server.bat</code>
        script in <code>sbin</code>.
      </p>

      <doc:subsection id="customise-environment">
        <doc:heading>Customise RabbitMQ Server Environment Variables</doc:heading>

        <p>
          Environment variables are used to configure certain parameters of a node,
          e.g. directory paths. They can be <a href="configure.html#customise-windows-environment">customised</a>
          as needed.
        </p>
      </doc:subsection>

      <doc:subsection id="start-as-application">
        <doc:heading>Start the Broker as an Application</doc:heading>

        <p>
          Run the command <pre class="lang-bash">rabbitmq-server.bat -detached</pre>. This will start
          a node in the background (not attached to the Command Prompt).
        </p>
        <p>
          Alternatively, <code>rabbitmq-server.bat</code> can be executed in Windows Explorer
          to start a node in foreground.
        </p>
        <p>
          If you start by double-clicking, a Command Prompt window opens,
          displays a short banner message, concluding with the message
          "completed with <i>[n]</i> plugins.", indicating that the RabbitMQ
          broker has been started successfully.
        </p>
        <p>
          If the node was started without the <code>-detached</code> option,
          e.g. using Windows Explorer, a second Command Prompt
          window will be necessary to control the application using CLI tools.
          <em>Note: </em> Closing the original Command Prompt window
          will forcefully shut down a server started this way.
        </p>
      </doc:subsection>
    </doc:section>

    <doc:section name="running-windows-service">
      <doc:heading>Running RabbitMQ Server as a Service</doc:heading>
      <p>
        The service will run in the security context of the system account
        without the need for a user to be logged in on a console.
        This is normally more appropriate for production use.
        The server should not be run as a
        service and application simultaneously.
      </p>
      <p>
        The service runs using the <code>rabbitmq-service.bat</code>
        script in <code>sbin</code>.
      </p>

      <doc:subsection>
        <doc:heading>Customise RabbitMQ Service Environment Variables</doc:heading>

        <p>
          The <code>rabbitmq-service.bat</code> script
          recognises many of the same
          <a href="configure.html#customise-windows-environment">environment variables</a>
          as <code>rabbitmq-server.bat</code>, as well as a few additional
          service environment variables.
        </p>

        <p>
          <em>Note: </em>After setting environment variables,
          it is necessary to reinstall the service.
        </p>
      </doc:subsection>

      <doc:subsection>
        <doc:heading>Install the Service</doc:heading>

        <p>
          Install the service by running
          <pre class="lang-bash">rabbitmq-service.bat install</pre>
        </p>
        <p>
          A service with the name defined by <b>RABBITMQ_SERVICENAME</b>
          should now appear in the Windows Services control panel
          (Start&#xA0;>&#xA0;Run&#xA0;<code>services.msc</code>).
        </p>
      </doc:subsection>

      <doc:subsection>
        <doc:heading>Managing the Service</doc:heading>

        <p>
          To manage the service (install, remove, start, stop,
          enable, disable), use
          <a href="man/rabbitmq-service.html"><code>rabbitmq-service.bat</code></a>
          commands.  Alternatively, the Windows Services panel
          (<code>services.msc</code>) can be used to perform some of the
          same functions as the service script.
        </p>
      </doc:subsection>

      <doc:subsection>
        <doc:heading>Start the Broker as a Service</doc:heading>

        <p>
          To start the broker, execute
          <pre class="lang-bash">rabbitmq-service.bat start</pre>
        </p>
        <p>
          If the output from this command is
          "<code>Service <em>RABBITMQ_SERVICENAME</em> started</code>", then the service was started
          successfully.
        </p>
        <p>
          Confirm the service named <em>RABBITMQ_SERVICENAME</em>
          reports a "Started" status in Services: <br/>
          Start&#xA0;>&#xA0;Run&#xA0;<code>services.msc</code>.
        </p>
      </doc:subsection>
    </doc:section>
    <xi:include href="install-windows-ports.xml.inc"/>
    <xi:include href="install-guest-localhost.xml.inc"/>
    <xi:include href="install-windows-manage.xml.inc"/>
    <xi:include href="install-windows-quirks.xml.inc" />
    <xi:include href="mailing-list.xml.inc"/>
  </body>
</html>
