<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!DOCTYPE html [
<!ENTITY % entities SYSTEM "rabbit.ent" >
%entities;
]>
<!--
Copyright (c) 2007-2019 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License,
Version 2.0 (the "License”); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:r="http://www.rabbitmq.com/namespaces/ad-hoc/conformance"
      xmlns:x="http://www.rabbitmq.com/2011/extensions"
      xmlns:xi="http://www.w3.org/2003/XInclude">
  <head>
    <title>Installing on RPM-based Linux (RHEL, CentOS, Fedora, openSUSE)</title>
  </head>
  <body>

   <doc:section name="overview">
       <doc:heading>Overview</doc:heading>
       <p>
         <code>rabbitmq-server</code> is included in standard Fedora
         and RHEL repositories. However, the versions included are
         usually outdated.
       </p>

       <p>
         There are two ways to install the most recent version of RabbitMQ:

         <ul>
           <li>Installing the package using Yum repositories on <a href="#package-cloud">Package Cloud</a> or <a href="#bintray">Bintray</a> (this option is highly recommended)</li>
           <li><a href="#downloads">Downloading</a> the package and installing it with <code>rpm</code>. This option will require manual installation of all <a href="#package-dependencies">package dependencies</a>.</li>
         </ul>
       </p>

       <p>
         The following guide focuses on RabbitMQ installation on RPM-based distributions
         such as Fedora, RHEL and CentOS. It covers a number of topics:

         <ul>
           <li>Package installation from Yum repositories on <a href="#package-cloud">Package Cloud</a> or <a href="#bintray">Bintray</a></li>
           <li>How to install a <a href="#install-erlang">latest supported Erlang/OTP version</a></li>
           <li><a href="#package-dependencies">Package dependencies</a></li>
           <li><a href="#supported-distributions">Supported distributions</a></li>
           <li><a href="#sudo-requirements">Privilege requirements</a></li>
           <li><a href="#downloads">Package downloads</a></li>
           <li>How to <a href="#managing-service">manage the service</a></li>
           <li>How to <a href="#server-logs">inspect node and service logs</a></li>
         </ul>

         and more.
       </p>
   </doc:section>



    <doc:section name="overview">
      <doc:heading>Overview</doc:heading>
      <p>
        The package is distributed via Yum repositories on <a href="https://packagecloud.io/rabbitmq/rabbitmq-server/">PackageCloud</a>
        and <a href="https://bintray.com/rabbitmq/rpm/rabbitmq-server">Bintray</a>.
      </p>

      <p>
        <code>rabbitmq-server</code> is included in Fedora. However,
        the versions included often lag behind RabbitMQ releases.
        It is recommended that you use Yum repositories from <a href="https://packagecloud.io/rabbitmq/rabbitmq-server/">PackageCloud</a>
        or <a href="https://bintray.com/rabbitmq/rpm/rabbitmq-server">Bintray</a>.
      </p>
      <p>
        Check the <a href="https://admin.fedoraproject.org/updates/rabbitmq-server">Fedora
        package</a> details for which version of the server is
        available for which versions of the distribution.
      </p>
    </doc:section>

   <doc:section name="supported-distributions">
       <doc:heading>Supported Distributions</doc:heading>

       <p>
         Below is a list of supported RPM-based distributions as of RabbitMQ 3.6.3:
         <ul>
           <li>CentOS 7.x and x.x (note: there are two separate RPM packages for each series)</li>
           <li>RedHat Enterprise Linux 7.x and x.x (same packages as for CentOS)</li>
           <li>Fedora 23 through 25 (use the CentOS 7.x package)</li>
         </ul>

         The packages may work on other RPM-based distributions
         if <a href="#package-dependencies">dependencies</a> are satisfied but their testing and support
         is done on a best effort basis.
       </p>
   </doc:section>

   <doc:section name="sudo-requirements">
       <doc:heading>User Privilege Requirements</doc:heading>

       <p>
         RabbitMQ RPM package will require <code>sudo</code> privileges to install and manage.
         In environments where <code>sudo</code> isn't available, consider using the
         <a href="/install-generic-unix.html">generic binary build</a>.
       </p>
   </doc:section>

    <doc:section name="install-erlang">
      <doc:heading>Install Erlang</doc:heading>

      <p>
        Before installing RabbitMQ, you must install a <a href="/which-erlang.html">supported version</a> of Erlang/OTP.
        There are three commonly used sources for Erlang packages on RPM-based distributions.
      </p>

      <ul>
        <li>
          Team RabbitMQ produces <a href="https://github.com/rabbitmq/erlang-rpm">a package</a> stripped
          down to only provide those components needed to run
          RabbitMQ. It might be easiest to use if installing
          Erlang's dependencies is proving difficult.
        </li>
        <li>
          <a href="https://www.erlang-solutions.com/resources/download.html">Erlang
          Solutions</a> produces packages that are usually reasonably up to
          date and involve installation of a potentially excessive list of dependencies.
        </li>
        <li>
          <a href="https://fedoraproject.org/wiki/EPEL">EPEL</a> ("Extra Packages
          for Enterprise Linux"); part of the Red Hat/Fedora organisation,
          provides many additional packages, including Erlang. These are the
          most official packages but tend to be out of date.
          The packages are split into many small pieces.
        </li>
        <li>
          <a href="https://www.opensuse.org/">openSUSE</a> produces Erlang packages for each distribution (openSUSE and SLES)
        </li>
      </ul>

      <doc:subsection name="install-zero-dependency-rpm">
        <doc:heading>Zero-dependency Erlang from RabbitMQ</doc:heading>

        <p>
          <a href="https://github.com/rabbitmq/erlang-rpm">Zero dependency Erlang RPM package for running RabbitMQ</a> can be
          installed via Yum repositories <a href="https://bintray.com/rabbitmq-erlang/rpm/erlang">on Bintray</a> and <a href="https://packagecloud.io/rabbitmq/erlang">Package Cloud</a>
          as well as a direct download.
        </p>
        <p>
          As the name suggests, the package strips off some Erlang modules and dependencies
          that are not essential for running RabbitMQ.
        </p>
      </doc:subsection>

      <doc:subsection name="install-from-suse-repository">
        <doc:heading>Erlang packages from openSUSE</doc:heading>
        <p>
          openSUSE package repositories provide Erlang so it can be installed using Zypper:

<pre class="sourcecode bash">
sudo zypper in erlang
</pre>

          Erlang versions available in the standard repositories will in practice be behind the most recent version.
          To use the last version with the newest features, add the
          <a href="https://download.opensuse.org/repositories/devel:/languages:/erlang:/Factory/">openSUSE Factory repositories for Erlang</a>.

          For example, for openSUSE Leap 15:

<pre class="sourcecode bash">
# add the openSUSE erlang factory repository for leap 15
sudo zypper addrepo https://download.opensuse.org/repositories/devel:/languages:/erlang:/Factory/openSUSE_Leap_15.0/ openSUSE-Erlang-Factory

# import the signing key and refresh the repository
sudo zypper --gpg-auto-import-keys refresh

# install a recent Erlang version
sudo zypper in erlang
</pre>
        </p>
      </doc:subsection>

      <doc:subsection name="install-from-esl-repository">
        <doc:heading>Erlang Yum Repository from Erlang Solutions</doc:heading>
        <p>
          Follow the instructions under "Installation using repository"
          at <a href="https://www.erlang-solutions.com/resources/download.html">Erlang Solutions</a>.
          Note that Erlang Solutions tend to provide cutting edge Erlang versions that may or may not
          be <a href="/which-erlang.html">supported by RabbitMQ</a>. Version locking (see below) is recommended
          when Erlang installed using this option.
        </p>
      </doc:subsection>

      <doc:subsection name="install-monolithic-from-esl-repository">
        <doc:heading>Monolithic Erlang Package from Erlang Solutions</doc:heading>

        <p>
          Download and install the <a href="/which-erlang.html">appropriate</a> <code>esl-erlang</code> RPM
          from <a href="https://www.erlang-solutions.com/resources/download.html">Erlang Solutions</a>.
        </p>
      </doc:subsection>

      <doc:subsection name="install-erlang-from-epel-repository">
        <doc:heading>Erlang package from the EPEL Repository</doc:heading>

        <p>
          Follow the steps in the <a href="https://fedoraproject.org/wiki/EPEL/FAQ#howtouse">EPEL FAQ</a> to enable EPEL on the target
          machine, then run the following command as root:
<pre class="lang-bash">
yum install erlang
</pre>
        </p>
      </doc:subsection>


      <doc:subsection name="rpm-version-locking">
        <doc:heading>Package Version Locking in Yum</doc:heading>

        <p>
          <a href="https://access.redhat.com/solutions/98873">yum version locking</a> plugin is recommended
          to prevent unwanted Erlang upgrades. This is highly recommended when Erlang is installed
          via the Erlang Solutions repository.
        </p>
      </doc:subsection>
    </doc:section>


   <doc:section name="package-dependencies">
     <doc:heading>Package Dependencies</doc:heading>
     <p>
       When installing with Yum, all dependencies other than Erlang/OTP should be resolved and installed automatically
       as long as compatible versions are available. When that's not the case, dependency packages must be installed manually.

       However, when installing a local RPM file via <code>yum</code> dependencies must be installed
       manually. Below is the list of dependencies of RabbitMQ server as of <code>3.7.0</code>:

       <ul>
         <li><code>erlang >= 19.3</code>. <a href="/which-erlang.html">Erlang</a>
         can installed from a number of <a href="#install-erlang">repositories</a></li>
         <li><code>socat</code></li>
         <li><code>logrotate</code></li>
       </ul>
     </p>
   </doc:section>



    <doc:section name="install-rabbitmq">
      <doc:heading>Install RabbitMQ Server</doc:heading>

      <doc:subsection name="package-cloud">
        <doc:heading>Using PackageCloud Yum Repository</doc:heading>

        <p>
          A Yum repository with RabbitMQ packages is available from PackageCloud.

          A quick way to install is to use a <a href="https://packagecloud.io/rabbitmq/rabbitmq-server/install#bash-rpm">Package Cloud-provided script</a>.
          Package Cloud also can be used to <a href="https://packagecloud.io/rabbitmq/erlang/install#bash-rpm">install a recent Erlang version via yum</a>.
        </p>

        <p>
          There are more installation options available:

          <ul>
            <li>Using PackageCloud Chef cookbook</li>
            <li>Using PackageCloud Puppet module</li>
            <li>Manually</li>
          </ul>

          See <a href="https://packagecloud.io/rabbitmq/rabbitmq-server/install">PackageCloud RabbitMQ repository instructions</a>.
        </p>

        <p>
          Package Cloud signs distributed packages using their own GPG keys.
          As of late 2018 Package Cloud is undergoing a signing key migration. Instead of relying on a "master key",
          projects will migrate to use repository-specific signing keys. Before the migration is completed,
          both old and new key must be imported for forward compatibility:

<pre class="lang-bash">
# import the new PackageCloud key that will be used starting December 1st, 2018 (GMT)
rpm --import https://packagecloud.io/rabbitmq/rabbitmq-server/gpgkey

# import the old PackageCloud key that will be discontinued on December 1st, 2018 (GMT)
rpm --import https://packagecloud.io/gpg.key
</pre>
        </p>

        <p>
          After importing both keys please follow the <a href="https://packagecloud.io/rabbitmq/rabbitmq-server/install">Package Cloud</a> repository
          setup instructions.
        </p>
      </doc:subsection>


      <doc:subsection name="bintray">
        <doc:heading>Using Bintray Yum Repository</doc:heading>

        <p>
          A Yum repository with RabbitMQ packages is <a href="https://bintray.com/rabbitmq/rpm/rabbitmq-server">available from Bintray</a>. The package page provides a repository
          setup help section.

          Bintray also can be used to <a href="https://bintray.com/rabbitmq-erlang/rpm/erlang">install a recent Erlang version via yum</a>.
        </p>

        <p>
          Before the Yum repository can be used, <a href="/signatures.html">RabbitMQ signing key</a> must be imported first.
          This makes RPM tools trust the signature on the packages provided in the repository. To do so,
          run <code>rpm --import</code> as a superuser:

<pre class="lang-bash">
rpm --import https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
</pre>
        </p>

        <p>
          In order to use the Yum repository, a <code>.repo</code> file (e.g. <code>rabbitmq.repo</code>) has to be
          added under the <code>/etc/yum.repos.d/</code> directory. The contents of the file will vary slightly
          between distributions (e.g. CentOS 7 vs. CentOS 6 vs. OpenSUSE).
          The following example targets CentOS 7:

<pre class="lang-bash">
[bintray-rabbitmq-server]
name=bintray-rabbitmq-rpm
baseurl=https://dl.bintray.com/rabbitmq/rpm/rabbitmq-server/v3.7.x/el/7/
gpgcheck=0
repo_gpgcheck=0
enabled=1
</pre>
        </p>

        <p>
          On CentOS 6 the <code>baseurl</code> line would be slightly different:

<pre class="lang-bash">
[bintray-rabbitmq-server]
name=bintray-rabbitmq-rpm
baseurl=https://dl.bintray.com/rabbitmq/rpm/rabbitmq-server/v3.7.x/el/6/
gpgcheck=0
repo_gpgcheck=0
enabled=1
</pre>
        </p>

        <p>
          The following example targets OpenSUSE:

<pre class="lang-bash">
[bintray-rabbitmq-server]
name=bintray-rabbitmq-rpm
baseurl=https://dl.bintray.com/rabbitmq/rpm/rabbitmq-server/v3.7.x/opensuse/42.1/
gpgcheck=0
repo_gpgcheck=0
enabled=1
</pre>
        </p>

        <p>
          The following example targets SLES 11.x:

<pre class="lang-bash">
[bintray-rabbitmq-server]
name=bintray-rabbitmq-rpm
baseurl=https://dl.bintray.com/rabbitmq/rpm/rabbitmq-server/v3.7.x/sles/11
gpgcheck=0
repo_gpgcheck=0
enabled=1
</pre>
        </p>
      </doc:subsection>


      <doc:subsection name="with-rpm">
        <doc:heading>With rpm and Downloaded RPM</doc:heading>

        <p>
          After downloading the server package, issue the following command as
          'root':
        </p>
<pre class="lang-bash">
rpm --import https://github.com/rabbitmq/signing-keys/releases/download/2.0/rabbitmq-release-signing-key.asc
# this example assumes the CentOS 7 version of the package
yum install rabbitmq-server-&version-server;-&serverRPMMinorVersion;.el7.noarch.rpm
</pre>

        <p>
          RabbitMQ public signing key is also <a href="https://www.rabbitmq.com/rabbitmq-release-signing-key.asc">available from rabbitmq.com</a>:

<pre class="lang-bash">
rpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc
# this example assumes the CentOS 7 version of the package
yum install rabbitmq-server-&version-server;-&serverRPMMinorVersion;.el7.noarch.rpm
</pre>
        </p>
      </doc:subsection>
    </doc:section>

    <doc:section name="downloads">
      <doc:heading>Download the Server</doc:heading>
      <p>
        In some cases it may easier to download the package and install it manually. The package can be downloaded
        from <a href="https://github.com/rabbitmq/rabbitmq-server/releases">GitHub</a>.
      </p>

      <r:downloads signature="yes">
        <r:download downloadfile="rabbitmq-server-&version-server;-&serverRPMMinorVersion;.el7.noarch.rpm"
		    absolute="yes" url="https://github.com/rabbitmq/rabbitmq-server/releases/download/&version-server-tag;/rabbitmq-server-&version-server;-&serverRPMMinorVersion;.el7.noarch.rpm">
	       RPM for RHEL Linux 7.x, CentOS 7.x, Fedora 19+ (supports systemd)
        </r:download>
        <r:download downloadfile="rabbitmq-server-&version-server;-&serverRPMMinorVersion;.el6.noarch.rpm"
		    absolute="yes" url="https://github.com/rabbitmq/rabbitmq-server/releases/download/&version-server-tag;/rabbitmq-server-&version-server;-&serverRPMMinorVersion;.el6.noarch.rpm">
	       RPM for RHEL Linux 6.x, CentOS 6.x, Fedora prior to 19
        </r:download>

        <r:download downloadfile="rabbitmq-server-&version-server;-&serverRPMMinorVersion;.suse.noarch.rpm"
		    absolute="yes" url="https://github.com/rabbitmq/rabbitmq-server/releases/download/&version-server-tag;/rabbitmq-server-&version-server;-&serverRPMMinorVersion;.suse.noarch.rpm">
	       RPM for openSUSE Linux
        </r:download>
        <r:download downloadfile="rabbitmq-server-&version-server;-&serverRPMMinorVersion;.sles11.noarch.rpm"
		    absolute="yes" url="https://github.com/rabbitmq/rabbitmq-server/releases/download/&version-server-tag;/rabbitmq-server-&version-server;-&serverRPMMinorVersion;.sles11.noarch.rpm">
	       RPM for SLES 11.x
        </r:download>
      </r:downloads>
    </doc:section>


   <doc:section name="running-rpm">
     <doc:heading>Run RabbitMQ Server</doc:heading>

     <h3>Start the Server</h3>
      <p>
        The server is not started as a daemon by default when the
        RabbitMQ server package is installed. To start the daemon by default
        when the system boots, as an administrator run

<pre class="lang-bash">
chkconfig rabbitmq-server on
</pre>
      </p>
      <p>
        As an administrator, start and stop the
        server as usual:
<pre class="lang-bash">
/sbin/service rabbitmq-server start

/sbin/service rabbitmq-server stop
</pre>
      </p>
   </doc:section>

   <doc:section name="configuration-rpm">
     <doc:heading>Configuring RabbitMQ</doc:heading>
     <p>
       On most systems, a node should be able to start and run with all defaults.
       Please refer to the <a href="configure.html">Configuration guide</a> to learn more
       and <a href="/production-checklist.html">Production Checklist</a> for guidelines beyond
       development environments.
     </p>
     <p>
       <em>Note: </em>The server is set up to run as system user
       <code>rabbitmq</code>.
       If you change the location of the node database or the logs,
       you must ensure the files are owned by this user
       (and also update the environment variables).
     </p>
   </doc:section>

    <xi:include href="install-selinux-ports.xml.inc"/>
    <xi:include href="install-guest-localhost.xml.inc"/>

    <doc:section name="kernel-resource-limits">
      <doc:heading>Controlling System Limits on Linux</doc:heading>
      <xi:include href="max-open-files-limit-intro.xml.inc" />
      <xi:include href="max-open-files-limit-different-limits.xml.inc" />
      <xi:include href="max-open-files-limit-options-other-linux.xml.inc" />
      <xi:include href="max-open-files-limit-going-further-linux.xml.inc" />
      <xi:include href="max-open-files-limit-verifying-linux.xml.inc" />
      <xi:include href="max-open-files-limit-tools.xml.inc" />
    </doc:section>

    <xi:include href="install-unix-manage.xml.inc"/>
    <xi:include href="install-unix-logs.xml.inc"/>
  </body>
</html>
