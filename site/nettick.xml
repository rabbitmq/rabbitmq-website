<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!--
Copyright (c) 2007-2016 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License, 
Version 2.0 (the "License”); you may not use this file except in compliance 
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:x="http://www.rabbitmq.com/2011/extensions">
  <head>
    <title>Net Tick Time</title>
  </head>
  <body>
    <doc:section name="background-info">
      <p class="intro">
        This page explains the Erlang <code>net_ticktime</code> configuration
        setting. See the <a href="http://erlang.org/doc/man/kernel_app.html">Erlang kernel
        documentation</a> for more details.
      </p>
    </doc:section>
    <doc:section name="net-tick-overview">
      <doc:heading>Overview</doc:heading>
      <p>
        Each pair of nodes in a cluster are connected by the transport layer.
        Periodic tick messages are exchanged between all pairs of nodes to
        maintain the connections and to detect disconnections.
        Network interruptions could otherwise go undetected for a period
        that depends on the transport.
      </p>

      <p>
        When one RabbitMQ node determines that another node has gone
        down it will log a message giving the other node's name and
        the reason, like:
      </p>

      <pre class="sourcecode">=INFO REPORT==== 23-Sep-2014::16:21:22 ===
node rabbit@cordelia down: net_tick_timeout
      </pre>

      <p>
        In this case the <code>net_tick_timeout</code> tells us that
        the other node was detected as down due to the net ticktime
        being exceeded. Another common reason is
        <code>connection_closed</code>, meaning that the connection
        was explicitly closed at the TCP level.
      </p>
    </doc:section>

    <doc:section name="net-tick-frequency">
      <doc:heading>Tick Frequency</doc:heading>
      <p>
        The frequency of both tick messages and detection of failures is controlled
        by the <code>net_ticktime</code> configuration setting. Normally four ticks
        are exchanged between a pair of nodes every <code>net_ticktime</code> seconds.
        If no communication is received from a node within <code>net_ticktime</code>
        (&#177; 25% for ) seconds then the node is considered down and no longer a member
        of the cluster.
      </p>
      <p>
        Increasing the <code>net_ticktime</code> across all nodes in a cluster will
        make the cluster more resilient to short network outtages, but it will take
        longer for remaing nodes to detect crashed nodes. Conversely, reducing the
        <code>net_ticktime</code> across all nodes in a cluster will reduce detection
        latency, but increases the risk of detecting spurious
        <a href="partitions.html">partitions</a>.
      </p>
      <p>
        The impact of changing the default <code>net_ticktime</code> should be
        carefully considered. All nodes in a cluster must use the same
        <code>net_ticktime</code>. The following sample <a href="/configure.html#advanced-config-file">advanced.config</a>
        configuration demonstrates doubling the default <code>net_ticktime</code> from
        60 to 120 seconds:
      </p>
      <p>
<pre>    [
        {kernel, [{net_ticktime,  120}]}
    ].</pre>
      </p>
    </doc:section>
  </body>
</html>
