<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!--
Copyright (C) 2007-2015 Pivotal Software, Inc. 

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License, 
Version 2.0 (the "License”); you may not use this file except in compliance 
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:x="http://www.rabbitmq.com/2011/extensions">
  <head>
    <title>Inspecting AMQP 0-9-1 Traffic using Wireshark</title>
  </head>
  <body>
      <p class="intro">
        <a href="https://www.wireshark.org/#download">Wireshark 2.0</a>
        contains enhanced support for AMQP traffic inspection and
        analysis. It can display any AMQP 0-8, 0-9-1 and AMQP 1.0 traffic,
        including AMQP 0-9-1 <a href="amqp-0-9-1-errata.html#section_3">Errata</a>
        and RabbitMQ <a href="extensions.html">Extensions</a>.
      </p>
      <doc:section name="packet-list">
        <doc:heading>Packet List and Details</doc:heading>
        <p>
          Packet List provides a summary of exchanged frames. The Info
          column indicates the Class and Method (e.g. Basic.Publish)
          and then the most significant arguments. For example:
          <ul>
            <li>Connection.Open vhost=<i>(vhost)</i></li>
            <li>Connection.Close reply=<i>(reply-text)</i></li>
            <li>Channel.Close reply=<i>(reply-text)</i></li>
            <li>Exchange.Declare x=<i>(exchange-name)</i></li>
            <li>Exchange.Bind dx=<i>(dest-exchange)</i>
                              sx=<i>(source-exchange)</i>
                              bk=<i>(routing-key)</i></li>
            <li>Queue.Declare q=<i>(queue-name)</i></li>
            <li>Queue.Bind q=<i>(queue-name)</i>
                           x=<i>(exchange-name)</i>
                           bk=<i>(routing-key)</i></li>
            <li>Queue.Delete q=<i>(queue-name)</i></li>
            <li>Basic.Publish x=<i>(exchange-name)</i>
                              rk=<i>(routing-key)</i></li>
          </ul>
        </p>
        <p>
          Packet Details then indicate all arguments of the frame. It
          also includes dynamically calculated values enclosed in square
          brackets. This is explained in next section.
        </p>
        <img src="img/wireshark-main-window.png" alt="Main window" title="Main window" />
      </doc:section>
      <doc:section name="links">
        <doc:heading>Links Between Frames</doc:heading>
        <p>
          Wireshark analyzes the AMQP 0-9-1 packet flow and displays
          additional information enclosed in square brackets:
          <ul>
            <li>Arguments of basic.publish include a Publish-Number,
            which is the sequence number used by
            <a href="confirms.html">Confirms (aka Publisher Acknowledgements)</a>.</li>
            <li>Each acknowledged basic.publish or public.delivery
            includes a reference to the frame that contains the
            corresponding basic.ack.</li>
            <li>Similarly, each basic.ack contains a reference (possibly
            multiple) to frame(s) that is being confirmed by this Ack.</li>
          </ul>
        </p>
      </doc:section>
      <doc:section name="expert-info">
        <doc:heading>Expert Information</doc:heading>
        <p>
          Wireshark automatically highlights AMQP 0-9-1 packets with:
          <ul>
            <li>Connection errors (connection.close) and channel errors
            (channel.close)</li>
            <li>Undeliverable messages (basic.return)</li>
          </ul>
        </p>
        <p>
          You may display summary of significant frames in a dedicated
          dialog. Go to Analyze > Expert Information and possibly apply
          the display filter.
        </p>
        <img src="img/wireshark-expert-info.png" alt="Expert Info" title="Expert Info" />
      </doc:section>
      <doc:section name="tls">
        <doc:heading>Decrypting TLS/SSL Traffic</doc:heading>
        <p>
          Wireshark enables you to inspect the AMQPS traffic, however you
          can decrypt only the traffic that have been encrypted using the
          RSA keys, excluding the RSA ephemeral and Diffie-Hellman
          Ephemeral (DHE/EDH) cipher suites. You should
          <a href="ssl.html#configuring-ciphers">set cipher suites</a> used
          by RabbitMQ and restrict the list to RSA only.
        </p>
<pre class="sourcecode">
[
 {rabbit, [
           {ssl_options, [{ciphers, [{rsa,aes_256_cbc,sha256},
                                     {rsa,aes_128_cbc,sha256},
                                     {rsa,aes_256_cbc,sha},
                                     {rsa,'3des_ede_cbc',sha},
                                     {rsa,aes_128_cbc,sha},
                                     {rsa,des_cbc,sha}]}
                         ]}
          ]}
].
</pre>
        <p>
          Also, you must supply Wireshark with the private key used to
          encrypt the data. If a mutual authentication is used, you need to
          supply both private keys.
          Go to the Edit > Preferences dialog, select Protocols > SSL and
          then click Edit the RSA keys list.
          <ul>
            <li>IP Address and Port identify the host that holds the
            private key, usually the server. A wildcard IP address
            of 0.0.0.0 and wildcard port of 0 or data can be used.</li>
            <li>Protocol should identify <code>amqp</code>.</li>
            <li>The private key file should be in the PEM or PKCS12
            format, possibly protected by a password.</li>
          </ul>
        </p>
      </doc:section>
  </body>
</html>
