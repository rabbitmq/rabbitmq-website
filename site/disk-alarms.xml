<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!--
Copyright (c) 2007-2016 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License, 
Version 2.0 (the "License”); you may not use this file except in compliance 
with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:x="http://www.rabbitmq.com/2011/extensions">
  <head>
    <title>Disk Alarms</title>
  </head>
  <body>

    <p>
      RabbitMQ will block producers when free disk space drops
      below a certain configurable limit. This is a good idea 
      because even transient messages can be paged to disk at any
      time, and running out of disk space can cause the server to
      crash.
    </p>

    <p>
      Global flow control will be triggered if the amount of free disk
      space drops below a configured limit (the default limit is 50 MB).
      The free space of the drive or partition that the broker database
      uses will be monitored at least every 10 seconds to determine
      whether the alarm should be raised or cleared.  Monitoring will
      start as soon as the broker starts up, causing an entry in the
      broker logfile:
      <pre class="sourcecode">
=INFO REPORT==== 23-Jun-2012::14:52:41 ===
Disk free limit set to 953MB</pre>
      Monitoring will be disabled on unrecognised platforms, causing an
      entry such as the one below:
      <pre class="sourcecode">
=WARNING REPORT==== 23-Jun-2012::15:45:29 ===
Disabling disk free space monitoring</pre>
    </p>

    <p>
      When running RabbitMQ in a cluster, the disk alarm is
      cluster-wide; if one node goes under the limit then all nodes
      will block connections.
    </p>

    <p>
      RabbitMQ periodically checks the amount of free disk
      space. The frequency with which disk space is checked is related
      to the amount of space at the last check (in order to ensure
      that the disk alarm goes off in a timely manner when space is
      exhausted). Normally disk space is checked every 10 seconds, but
      as the limit is approached the frequency increases. When very
      near the limit RabbitMQ will check as frequently as 10 times per
      second. This may have some effect on system load.
    </p>

    <p>
      When free disk space drops below the configured limit, RabbitMQ will
      block producers and prevent memory-based messages
      from being paged to disk. This will reduce the likelihood of a
      crash due to disk space being exhausted, but will not eliminate
      it entirely. In particular, if messages are being paged out
      rapidly it is possible to run out of disk space and crash in the
      time between two runs of the disk space monitor. A more
      conservative approach would be to set the limit to the same as
      the amount of memory installed on the system (see the configuration
      section below).
    </p>

    <doc:section name="diskfreesup-usage">
      <doc:heading>Configuring the Disk Free Space Limit</doc:heading>
      <p>
        The disk free space limit is configured with
        the <code>disk_free_limit</code> setting. By default 50MB is
        required to be free on the database partition (see the description of
        <a href="/relocate.html">file locations</a> for the default database location).
        This configuration file sets the disk free space limit to 1GB:
        <pre class="sourcecode">disk_free_limit.absolute = 1000000000</pre>
        Or you can use memory units (KB, MB GB etc.) like this:
        <pre class="sourcecode">disk_free_limit.absolute = 1GB</pre>
        Or, using the <a href="/configure.html#erlang-term-config-file">classic config format</a>:
        <pre class="sourcecode">[{rabbit, [{disk_free_limit, 1000000000}]}].</pre>
      </p>
      <p>
        It is also possible to set a free space limit relative to the RAM in the machine.
        This configuration file sets the disk free space limit to the same
        as the amount of RAM on the machine:
        <pre class="sourcecode">disk_free_limit.relative = 1.0</pre>
        Or, using the <a href="/configure.html#erlang-term-config-file">classic config format</a>:
        <pre class="sourcecode">[{rabbit, [{disk_free_limit, {mem_relative, 1.0}}]}].</pre>
      </p>
      <p>
        The limit can be changed while the broker is running
        using the <code>rabbitmqctl set_disk_free_limit <em>disk_limit</em></code> command 
        or <code>rabbitmqctl set_disk_free_limit mem_relative
        <em>fraction</em></code> command. This command will take effect
        until the broker shuts down. The corresponding configuration
        setting should also be changed when the effects should survive
        a broker restart.
      </p>
    </doc:section>
  </body>
</html>
