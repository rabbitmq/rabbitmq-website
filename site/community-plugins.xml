<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!DOCTYPE html [
<!ENTITY % entities SYSTEM "rabbit.ent" >
%entities;
]>
<!--
Copyright (c) 2007-2019 Pivotal Software, Inc.

All rights reserved. This program and the accompanying materials
are made available under the terms of the under the Apache License,
Version 2.0 (the "License”); you may not use this file except in compliance
with the License. You may obtain a copy of the License at

https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:r="http://www.rabbitmq.com/namespaces/ad-hoc/conformance"
      xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc"
      xmlns:x="http://www.rabbitmq.com/2011/extensions">
  <head>
    <title>Community Plugins</title>
  </head>
  <body show-in-this-page="true">
      <doc:section name="overview">
        <p>
          For your convenience, we offer binary downloads of plugins
          which have been contributed by authors in the
          community. These plugins do not ship with the RabbitMQ
          server itself; you can download them from
          our community plugin archive.
        </p>
        <p>
          The plugins are available compiled against various releases
          of RabbitMQ.
        </p>
        <p>
          We offer no guarantee that these will even work
          against a given release of RabbitMQ. We build them at
          release time, and also when requested to by a plugin
          author.
        </p>
        <p>
          The download links on this page let you download the latest
          build of the plugin, compiled against the latest feature
          release of RabbitMQ. Bugfix releases do not affect plugin
          compatibility. For older versions of plugins
          see <a href="https://dl.bintray.com/rabbitmq/community-plugins/">the archive</a>. See also
          <a href="installing-plugins.html">how to install additional
          plugins</a>.
        </p>

        <p>
          When RabbitMQ is upgraded, all community plugins must be re-installed.
          This may mean installing newer versions of them. Alternatively,
          they can be disabled before or during the upgrade.
        </p>

        <p>
          If you are the author of a plugin and would like it listed
          here, please <a href="contact.html">get in touch</a>!
        </p>
      </doc:section>
      <doc:section name="routing">
        <doc:heading>Routing</doc:heading>

        <table class="plugins">
          <r:plugin name="rabbitmq_lvc_exchange">
            The last value exchange acts like a direct exchange (binding
            keys are compared for equality with routing keys); but it
            also keeps track of the last value that was published with
            each routing key, and when a queue is bound, it
            automatically enqueues the last value for the binding key.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_lvc_exchange">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_lvc_exchange">3.6.x</a></li>
              <li>Maintainer: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-lvc-exchange">rabbitmq/rabbitmq-lvc-exchange</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_rtopic_exchange">
            Adds a reverse topic exchange which lets you provide
            routing patterns at publishing time, instead of at
            binding time.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_rtopic_exchange">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_rtopic_exchange">3.6.x</a></li>
              <li>Author: <b>Alvaro Videla</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-rtopic-exchange">rabbitmq/rabbitmq-rtopic-exchange</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_recent_history_exchange">
            <i>
              As of RabbitMQ 3.6.0 the <a href="https://github.com/rabbitmq/rabbitmq-recent-history-exchange#readme">recent history exchange plugin</a>
              is provided with the broker's package.
            </i>
          </r:plugin>

          <r:plugin name="rabbitmq_delayed_message_exchange">
            A plugin that adds delayed-messaging (or
            scheduled-messaging) to RabbitMQ.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_delayed_message_exchange">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_delayed_message_exchange">3.6.x</a></li>
              <li>Author: <b>Alvaro Videla</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-delayed-message-exchange">rabbitmq/rabbitmq-delayed-message-exchange</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_routing_node_stamp">
            A plugin that stamps a message with the node who first
            received it.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_routing_node_stamp">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_routing_node_stamp">3.6.x</a></li>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-routing-node-stamp">rabbitmq/rabbitmq-routing-node-stamp</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_message_timestamp">
            A plugin that adds a timestamp when a message first enters
            RabbitMQ.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_message_timestamp">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_message_timestamp">3.6.x</a></li>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-message-timestamp">rabbitmq/rabbitmq-message-timestamp</a></li>
            </ul>
          </r:plugin>
        </table>
      </doc:section>

      <doc:section name="auth">
        <doc:heading>Authentication / Authorisation</doc:heading>

        <table class="plugins">
          <r:plugin name="rabbitmq_auth_backend_http">
            <i>
              As of RabbitMQ 3.7.0 the HTTP auth backend plugin is
              provided with the broker's package.
            </i>
            Provides the ability for your RabbitMQ server to perform
            authentication (determining who can log in) and
            authorisation (determining what permissions they have)
            by making requests to an HTTP server.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_auth_backend_http">3.6.x</a></li>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-auth-backend-http">rabbitmq/rabbitmq-auth-backend-http</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_auth_backend_amqp">
            Provides the ability for your RabbitMQ server to perform
            authentication and authorisation over AMQP itself.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_auth_backend_amqp">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_auth_backend_amqp">3.6.x</a></li>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-auth-backend-amqp">rabbitmq/rabbitmq-auth-backend-amqp</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_auth_backend_ip_range">
            <i>
	      This plugin is not ported to RabbitMQ 3.7.x+ yet.
            </i>
            Provides the ability for your RabbitMQ server to perform
            authorisation based on the client IP address.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_auth_backend_ip_range">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_auth_backend_ip_range">3.6.x</a></li>
              <li>Authors: <b>Petr Gotthard</b></li>
              <li>Github: <a href="https://github.com/gotthardp/rabbitmq-auth-backend-ip-range">gotthardp/rabbitmq-auth-backend-ip-range</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_trust_store">
            <i>
              As of RabbitMQ 3.6.3 the trust store plugin is
              provided with the broker's package.
            </i>
            Provides support for TLS (x509) certificate whitelisting.
            All plugins which use the global TLS options will be
            configured with the same whitelist. This plugin is provided with
            the broker's package.
            <ul>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-trust-store">rabbitmq/rabbitmq-trust-store</a></li>
            </ul>
          </r:plugin>
        </table>
      </doc:section>

      <doc:section name="mgmt">
        <doc:heading>Management</doc:heading>
        <table class="plugins">
          <r:plugin name="rabbitmq_top">
            <i>
              As of RabbitMQ 3.6.3 the management top plugin is
              provided with the broker's package.
            </i>
            Adds a "top" like view of busy processes to the
            management plugin. This plugin is provided with the broker's
            package.
            <ul>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-top">rabbitmq/rabbitmq-top</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_management_exchange">
            Adds an exchange type which allows you to connect to the
            management API using AMQP rather than HTTP.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_management_exchange">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_management_exchange">3.6.x</a></li>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-management-exchange">rabbitmq/rabbitmq-management-exchange</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_event_exchange">
            <i>
              As of RabbitMQ 3.6.0 the <a href="https://github.com/rabbitmq/rabbitmq-event-exchange#readme">event exchange plugin</a>
              is provided with the broker's package.
            </i>
          </r:plugin>

          <r:plugin name="rabbitmq_management_themes">
            Adds the possibility to customize the management web UI
            look.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_management_themes">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_management_themes">3.6.x</a></li>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-management-themes">rabbitmq/rabbitmq-management-themes</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_boot_steps_visualiser">
            Adds a tab to the management UI which displays boot steps
            in a graph. This is a debugging tool: it is of no use in a
            production broker.
            <ul> 
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_boot_steps_visualiser">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_boot_steps_visualiser">3.6.x</a></li>
              <li>Author: <b>Alvaro Videla</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-boot-steps-visualiser">rabbitmq/rabbitmq-boot-steps-visualiser</a></li>
            </ul>
          </r:plugin>
        </table>
      </doc:section>

      <doc:section name="distributed">
        <doc:heading>Clustering and Distributed RabbitMQ</doc:heading>
        <table class="plugins">
          <r:plugin name="autocluster">
            <i>
              As of RabbitMQ 3.7.0, this plugin was superseded by a
              <a href="/cluster-formation.html">new peer discovery subsystem</a>
              built on the same ideas and supporting the same backends via
              separate plugins.
            </i>
            <p>
              Adds the possibility to automatically cluster RabbitMQ nodes
              using Consul, etcd or DNS for service discovery.
            </p>
            <ul>
              <li><r:community-plugin-link/></li>
              <li>Author: <b>Gavin M. Roy</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-autocluster">rabbitmq/rabbitmq-autocluster</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_clusterer">
            Provides an alternative way of cluster formation. This plugin is deprecated.

            <ul>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-clusterer">rabbitmq/rabbitmq-clusterer</a></li>
            </ul>
          </r:plugin>
        </table>
      </doc:section>

      <doc:section name="logging">
        <doc:heading>Logging</doc:heading>
        <table class="plugins">
          <r:plugin name="lager">
            <i>
              As of RabbitMQ 3.7.0 the lager plugin is
	      replaced by native Lager support.
            </i>
            Basho's <i>Lager</i> logging framework as a RabbitMQ plugin.
            <ul>
              <li>Author: <b>Basho Technologies</b></li>
              <li>Github (Lager): <a href="https://github.com/basho/lager">basho/lager</a></li>
              <li>Github (RabbitMQ packaging / notes): <a href="https://github.com/hyperthunk/rabbitmq-lager">hyperthunk/rabbitmq-lager</a></li>
            </ul>
          </r:plugin>
        </table>
      </doc:section>

      <doc:section name="queues">
        <doc:heading>Queues</doc:heading>
        <table class="plugins">
          <r:plugin name="rabbitmq_priority_queue">
            <i>
              As of RabbitMQ 3.5.0 the <a
              href="priority.html">priority queue</a> plugin is
              integrated into the broker. Users of the plugin
              upgrading from previous versions of RabbitMQ should:
            </i>
            <ul>
              <li>Install the new version of RabbitMQ</li>
              <li>Invoke: <code>rabbitmq-plugins disable rabbitmq_priority_queue</code></li>
              <li>Start the server</li>
            </ul>
          </r:plugin>
        </table>
        <table class="plugins">
          <r:plugin name="rabbitmq_sharding">
            <i>
              As of RabbitMQ 3.6.0 the <a href="https://github.com/rabbitmq/rabbitmq-sharding#readme">sharding plugin</a>
              is provided with the broker's package.
            </i>
          </r:plugin>
        </table>
      </doc:section>

      <doc:section name="protocols">
        <doc:heading>Protocols</doc:heading>
        <table class="plugins">
<!--
          <r:plugin name="rabbit_udp_exchange">
              Adds a new exchange type which listens on a
              specified UDP port for incoming messages, and relays them on
              to the queues bound to the exchange. It also takes messages
              published to the exchange and relays them on to a specified
              IP address and UDP port.
              <ul>
                <li><r:community-plugin-link/></li>
                <li>Author: <b>Tony Garnock-Jones</b></li>
                <li>Github: <a href="https://github.com/tonyg/udp-exchange">tonyg/udp-exchange</a></li>
              </ul>
          </r:plugin>
-->

          <r:plugin name="rabbitmq_coap_pubsub">
            <i>
              This plugin currently fails to build with RabbitMQ 3.7.0 so far.
            </i>
            Implements the Publish-Subscribe Broker for the Constrained
            Application Protocol (CoAP) as specified in the
            <a href="https://www.ietf.org/id/draft-koster-core-coap-pubsub-02.txt">draft-koster-core-coap-pubsub-02</a>.
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_coap_pubsub">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_coap_pubsub">3.6.x</a></li>
              <li>Authors: <b>Petr Gotthard</b></li>
              <li>GitHub: <a href="https://github.com/gotthardp/rabbitmq-coap-pubsub">gotthardp/rabbitmq-coap-pubsub</a></li>
            </ul>
          </r:plugin>
          <r:plugin name="rabbitmq_email">
            Maps SMTP to AMQP 0-9-1 (to convert an incoming email to an AMQP 0-9-1
            message) and AMQP 0-9-1 to SMTP (to send an email from an AMQP 0-9-1 message).
            <ul>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.7.x/rabbitmq_email">3.7.x</a></li>
              <li>Download for <a href="https://dl.bintray.com/rabbitmq/community-plugins/3.6.x/rabbitmq_email">3.6.x</a></li>
              <li>Authors: <b>Petr Gotthard</b></li>
              <li>GitHub: <a href="https://github.com/gotthardp/rabbitmq-email">gotthardp/rabbitmq-email</a></li>
            </ul>
          </r:plugin>
          <r:plugin name="pgsql_listen_exchange">
            <i>
	      This plugin is not ported to RabbitMQ 3.6.x+ yet.
            </i>
            Translates PostgreSQL NOTIFY messages to AMQP messages and
            publishes them to bound queues. The PostgreSQL NOTIFY
            message channel is used as the routing key for the message
            using direct exchange style routing mechanics.
            <ul>
              <li>Author: <b>Gavin M. Roy</b></li>
	      <li>Github: <a href="https://github.com/gmr/pgsql-listen-exchange">aweber/pgsql-listen-exchange</a></li>
            </ul>
          </r:plugin>

          <r:plugin name="rabbitmq_web_mqtt">
            <i>
              As of RabbitMQ 3.6.2 the Web-MQTT plugin is
              provided with the broker's package.
            </i>
            Provides support for MQTT-over-WebSockets.
            <ul>
              <li>Author: <b>Team RabbitMQ</b></li>
              <li>Github: <a href="https://github.com/rabbitmq/rabbitmq-web-mqtt">rabbitmq/rabbitmq-web-mqtt</a></li>
            </ul>
          </r:plugin>
        </table>
      </doc:section>
  </body>
</html>
