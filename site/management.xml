<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!DOCTYPE html PUBLIC "bug in xslt processor requires fake doctype"
"otherwise css isn't included" [
<!ENTITY % entities SYSTEM "rabbit.ent" >
%entities;
]>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc">
  <head>
    <title>RabbitMQ - Management Plugin</title>
  </head>
  <body>
    <doc:div>
      <doc:toc class="compact">
        <doc:heading>Table of Contents</doc:heading>
      </doc:toc>

      <doc:section name="features">
        <doc:heading>Features</doc:heading>
        <p>
          The rabbitmq-management plugin provides an HTTP-based API
          for management and monitoring of your RabbitMQ server, along
          with a browser-based UI and an experimental command line
          tool, <code>rabbitmqadmin</code>. Features include:
        </p>
        <ul>
          <li>
            Declare, list and delete exchanges, queues, bindings,
            users, virtual hosts and permissions.
          </li>
          <li>
            Monitor queue length, message rates globally and per
            channel, data rates per connection, etc.
          </li>
          <li>
            Monitor Erlang processes, file descriptors, memory use.
          </li>
          <li>
            Export / import broker config to JSON.
          </li>
          <li>
            Force close connections, purge queues.
          </li>
        </ul>
        <doc:subsection name="screenshots">
          <doc:heading>Screenshots</doc:heading>
          <table class="screenshots">
            <tr>
              <th>Overview</th>
              <th>Import / Export</th>
              <th>Channel List</th>
              <th>Queue Details</th>
            </tr>
            <tr>
              <td>
                <a href="/img/management/overview.png">
                  <img src="/img/management/thumbs/overview.png"/>
                </a>
              </td>
              <td>
                <a href="/img/management/import-export.png">
                  <img src="/img/management/thumbs/import-export.png"/>
                </a>
              </td>
              <td>
                <a href="/img/management/channels.png">
                  <img src="/img/management/thumbs/channels.png"/>
                </a>
              </td>
              <td>
                <a href="/img/management/queue.png">
                  <img src="/img/management/thumbs/queue.png"/>
                </a>
              </td>
            </tr>
          </table>
        </doc:subsection>
      </doc:section>

      <doc:section name="installation">
        <doc:heading>Installation</doc:heading>
        <p>
          The simplest way to obtain the management plugin is to
          download the binary packages from
          the <a href="plugins.html">plugins page</a> and copy them to
          your plugins directory. See
          the <a href="plugins.html">plugins page</a> for more
          details.
        </p>
        <p>
          If you wish to build the plugin from source, it can be built
          like any other. See
          the <a href="plugin-development.html">plugin development</a>
          page or
          the <a href="http://hg.rabbitmq.com/rabbitmq-management/file/&version-server-hg;/BUILDING">BUILDING</a>
          file for more information, but be aware that it seems to be
          problematic to build rabbitmq-mochiweb on Windows.
        </p>
        <doc:subsection name="erlang">
          <doc:heading>Requirements</doc:heading>
          <p>
            rabbitmq-management uses
            the <a href="http://github.com/mochi/mochiweb">Mochiweb</a>
            web server which requires a newer Erlang version. At least
            R13B01 is required, but later versions are recommended.
          </p>
        </doc:subsection>
      </doc:section>

      <doc:section name="getting-started">
        <doc:heading>Getting started</doc:heading>
        <ul>
          <li>
            The web UI is located at:
            http://<i>server-name</i>:55672/mgmt/
          </li>
          <li>
            The HTTP API and its documentation are located at:
            http://<i>server-name</i>:55672/api/
          </li>
          <li>
            Download of <code>rabbitmqadmin</code> and its documentation are at:
            http://<i>server-name</i>:55672/cli/
          </li>
        </ul>
        <p>
          To use the web UI you will need to authenticate as a
          RabbitMQ user (on a fresh installation the user "guest" is
          created with password "guest"). From here you can manage
          exchanges, queues, bindings, virtual hosts, users and
          permissions. Hopefully the UI is fairly self-explanatory.
        </p>
        <p>
          The management UI is implemented as a single static HTML
          page which makes background queries to the HTTP API. As such
          it makes heavy use of Javascript. It has been tested with
          recent versions of Firefox, Chromium and Safari, and with
          versions of Microsoft Internet Explorer back to 6.0.
        </p>
      </doc:section>

      <doc:section name="permissions">
        <doc:heading>Permissions</doc:heading>
        <p>
          The management plugin extends the
          existing <a href="admin-guide.html#access-control">permissions
          model</a> somewhat. Users can be marked as
          "administrators". Only administrators can view or edit
          users, virtual hosts or permissions at all. Furthermore,
          only administrators can see details of other users'
          connections and channels (and close such connections), as
          well as node-level data such as memory use and clustering.
        </p>
        <p>
          Normal RabbitMQ permissions still apply to administrators;
          just because a user is an administrator does not give them
          full access to exchanges, queues and bindings through either
          AMQP or the management plugin.
        </p>
        <p>
          All users, administrators or otherwise, can only list
          objects within a particular virtual host if they have any
          permissions for that virtual host. Non-administrators
          however cannot even see the existence of virtual hosts they
          do not have permissions for, and will not see messages in
          those virtual hosts counting towards their "global" message
          rates.
        </p>
      </doc:section>

      <doc:section name="configuration">
        <doc:heading>Configuration</doc:heading>
        <p>
          The management plugin has a couple of configuration
          options. These are managed through the main RabbitMQ
          <a href="configure.html#configuration-file">configuration file</a>.
        </p>
        <doc:subsection name="fine-stats">
          <doc:heading>
            Fine-grained statistics
          </doc:heading>
          <p>
            The message rates shown by the management plugin require
            fine-grained statistics to be enabled in the server. This
            will have a performance impact on a CPU-bound server;
            typically message throughput can be reduced by 5-10%. For
            ease of use, the management plugin will automatically enable
            fine-grained statistics when it is installed.
          </p>
          <p>
            However, if you'd rather get the throughput than the
            statistics, you can prevent this from happening. Set the
            value of the <code>force_fine_statistics</code> variable
            to <code>false</code> in your configuration file for
            the <code>rabbit_management_agent</code> application and
            restart RabbitMQ.
          </p>
        </doc:subsection>
        <doc:subsection name="http-logging">
          <doc:heading>HTTP request logging</doc:heading>
          <p>
            To create simple access logs of requests to the HTTP API,
            set the value of the <code>http_log_dir</code> variable in
            the <code>rabbit_management</code> application to the name
            of a directory in which logs can be created and restart
            RabbitMQ. Note that only requests to the API
            at <code>/api</code> are logged, not requests to the static
            files which make up the browser-based GUI.
          </p>
        </doc:subsection>
        <doc:subsection name="example-config">
          <doc:heading>Example</doc:heading>
          <p>
            An example configuration file for RabbitMQ that switches
            on request logging, and explicitly sets some other
            relevant parameters to their default values, would look
            like this:
          </p>
          <pre>[
  {rabbit,                  [ {tcp_listeners,         [5672]} ] },
  {rabbit_mochiweb,         [ {port,                  55672} ] },
  {rabbit_management,       [ {http_log_dir,          "/tmp/rabbit-mgmt"} ] },
  {rabbit_management_agent, [ {force_fine_statistics, true} ] }
].</pre>
        </doc:subsection>
      </doc:section>

      <doc:section name="clustering">
        <doc:heading>Note on clustering</doc:heading>
        <p>
          The management plugin is aware of clusters. You can install
          it on one or more nodes in a cluster, and see information
          pertaining to the entire cluster no matter which node you
          connect to.
        </p>
        <p>
          If you want to deploy cluster nodes which do not have the
          full management plugin installed, they will still require
          the <code>rabbitmq-management-agent</code> plugin. This can
          be obtained from the <a href="plugins.html">plugins
          page</a>.
        </p>
        <p>
          The managment plugin installs a statistics database into
          RabbitMQ to keep track of queue length, message rates,
          etc. In a RabbitMQ cluster there will only be one copy of
          the statistics database, located in the first node to come
          up that has the full management plugin installed. If that
          node subsequently goes down then statistics information
          (queue sizes, message rates) will be missing.
        </p>
      </doc:section>

      <doc:section name="http-api">
        <doc:heading>HTTP API</doc:heading>
        <p>
          The management plugin will create an HTTP-based API at
          http://<i>server-name</i>:55672/api/. Browse to that
          location for more information on the API. For convenience
          the documentation can also be obtained
          from <a href="http://hg.rabbitmq.com/rabbitmq-management/raw-file/&version-server-hg;/priv/www-api/help.html">our
          Mercurial server</a>.
        </p>
      </doc:section>
    </doc:div>
  </body>
</html>
