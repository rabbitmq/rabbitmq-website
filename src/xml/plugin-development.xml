<?xml-stylesheet type="text/xml" href="page.xsl"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns:doc="http://www.rabbitmq.com/namespaces/ad-hoc/doc">
  <head>
    <title>RabbitMQ - Plugin Development Guide</title>
  </head>
  <body>
    <doc:div>
      <p class="intro">
        This is the RabbitMQ Server Plugin Development Guide. It is expected that
        before reading this guide, the reader has a basic understanding of the RabbitMQ 
        plugin mechanism, as described in the <a href="admin-guide.html#plugins">Plugins</a>
        section of the Administration Guide.
      </p>

      <doc:toc class="compact">
        <doc:heading>Table of Contents</doc:heading>
      </doc:toc>

      <doc:section name="getting-started">
        <doc:heading>Getting Started</doc:heading>
        
        <p>
          To develop a RabbitMQ plugin, a working RabbitMQ development environment
          first needs to be configured. An &quot;umbrella&quot; project is now
          provided to assist in assembling all the necessary repositories. The following
          steps will walk through the process of checking out and activating a copy of the
          umbrella project in your local environment.
        </p>
        <ul>
          <li>
            Ensure that you have a working installation of <a href="http://mercurial.selenic.com/wiki/">Mercurial</a>.
          </li>
          <li>
            Ensure that the dependencies detailed in the <a href="build-server.html#prerequisites">Server Build</a>
            documentation are installed and functional.
          </li>
          <li>
            Clone the RabbitMQ public umbrella:
            <pre class="sourcecode">$ hg clone http://hg.rabbitmq.com/rabbitmq-public-umbrella</pre>
          </li>
          <li>
            Checkout the sub-projects into the Umbrella:
            <pre class="sourcecode">$ make co</pre>
          </li>
          <li>
            Build all the components under the Umbrella to ensure that your environment is functional:
            <pre class="sourcecode">$ make</pre>
          </li>
        </ul>
      </doc:section>

      <doc:section name="activating-a-plugin">
        <doc:heading>Activating a plugin</doc:heading>
        
        <p>
          Instead of requiring that developers rebuild plugin archives and re-install them each time a change
          is made, plugins can be operated with in a development-style mode to make it possible to develop plugins
          in place.
        </p>
        <p>
          To activate a plugin in a development environment, create a symlink for the plugin development directory
          in the rabbitmq-server/plugins directory. For example, to activate a development build of the mod_bql plugin:
          <pre class="sourcecode">$ cd rabbitmq-server/plugins
$ ln -s ../../mod_bql mod_bql
$ cd ..
$ script/activate-plugins</pre>
        </p>
        <p>
          Conversely, to disable a plugin, simply remove the symlink and re-run activate-plugins.
        </p>
      </doc:section>
    </doc:div>
  </body>
</html>
