#!/usr/bin/env python

from __future__ import with_statement

from xml.etree import ElementTree as ET
import sys
import os
import re

def usage():
    print "Usage: find-community-plugins <plugins-dir> <site-src-dir>"
    exit(1)

def find_files(plugins_dir):
    versions = os.listdir(plugins_dir)
    if len(versions) == 0:
        return None
    versions.sort()
    release = versions[-1:][0]
    plugins = {}
    subdir = os.path.join(plugins_dir, release)
    files = os.listdir(subdir)
    for f in files:
        abspath = os.path.join(subdir, f)
        m = re.search('^([^-]+)-(.*)\.ez$', f)
        if m:
            plugin = m.group(1)
            version = m.group(2)
            last_modified = os.stat(abspath).st_mtime
            new_record = {'version':       version,
                          'last_modified': last_modified}
            if plugin in plugins:
                if plugins[plugin]['last_modified'] < last_modified:
                    plugins[plugin] = new_record
            else:
                plugins[plugin] = new_record
    elem = ET.Element('plugins')
    elem.set('version', release)
    for plugin in plugins:
        p = ET.SubElement(elem, 'plugin')
        p.set('name', plugin)
        p.set('latest', plugins[plugin]['version'])
    return elem

def main():
    if len(sys.argv) < 2:
        usage()
    plugins_dir = sys.argv[1]
    src_dir = sys.argv[2]
    xml = find_files(plugins_dir)
    if xml != None:
        with open(os.path.join(src_dir, 'community-plugins.xml.dat'), 'w') as f:
            f.write(ET.tostring(xml))

if __name__ == "__main__":
    main()
